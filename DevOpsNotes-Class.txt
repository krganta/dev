
before start DevOps :

1) Github Account
2)Domain registration
3)

======================================================================================================
                             DevOps links
======================================================================================================

==================================================================================================
                       A)Introduction about DevOps
===================================================================================================
• Define Devops and its flow
• What is Devops
• SDLC models,Lean,ITIL,Agile
• Why Devops?
• History of Devops
• Devops Stakeholders
• Devops Goals
• Important terminology
• Devops perspective
• Devops Tools
• Configuration management
• Continuous Integration and Deployment
nice about DevOps ?
https://muchbits.com/category/devops.html

Difference CICD ?
https://dzone.com/articles/building-a-continuous-delivery-pipeline-using-jenk
https://dzone.com/articles/jenkins-pipeline-for-continuous-delivery-and-deplo
--------------------------------- 1)Define DevOps and its flow -----------------------------------
Dev = Development + QA
Ops = Operations Activity + IT Infra
A DevOps engineer is an information technology (IT) professional who works with software developers, system operators (SysOps) and other production IT staff to oversee code releases. ... For example, a DevOps engineer may start as a software developer that oversees aspects of operations

-------------------------2)What is Devops? -------------------------
“DevOps is a set of practices intended to reduce the time between committing a change to a system and the change being placed into normal production, while insuring high quality”
https://www.guru99.com/devops-tutorial.html
-------------------------3)SDLC models,Lean,ITIL,Agile -------------------------
https://www.safaribooksonline.com/library/view/effective-devops/9781491926291/ch04.html
What is Agile ?
http://istqbexamcertification.com/what-is-agile-methodology-examples-when-to-use-it-advantages-and-disadvantages/
“Agile Development” is an umbrella term for several iterative and incremental software development methodologies. The most popular agile methodologies include Extreme Programming (XP), Scrum, Crystal, Dynamic Systems Development Method (DSDM), Lean Development, and Feature-Driven Development (FDD).

Agile software development methodology is an process for developing software (like other software development methodologies – Waterfall model, V-Model, Iterative model etc.) However, Agile methodology differs significantly from other methodologies. In English, Agile means ‘ability to move quickly and easily’ and responding swiftly to change – this is a key aspect of Agile software development as well.

Lean ?
Lean means creating more value for customers with fewer resources. A lean organization understands customer value and focuses its key processes to continuously increase it. The ultimate goal is to provide perfect value to the customer through a perfect value creation process that has zero waste.
1-Indentity value —2-map the value stream —3-create a flow —4-establish —5-seek perfection
https://www.google.co.in/imgres?imgurl=https://www.lean.org/images/5stepslean.gif&imgrefurl=https://www.lean.org/WhatsLean/Principles.cfm&h=337&w=397&tbnid=-3-Jc3PfZp1mTM:&tbnh=160&tbnw=188&usg=__Rm6_Md67dTs0nhEHNJpJkiWWIBg=&vet=10ahUKEwjIlZrP3IvXAhWh0FQKHZN5CywQ9QEIKzAA..i&docid=JAbMLph-pvnXrM&sa=X&ved=0ahUKEwjIlZrP3IvXAhWh0FQKHZN5CywQ9QEIKzAA

SDLC :Devops SDLC
DevTeam(Software Engineer ) —>>QA —>> Operations
—Its life cycle
https://www.altencalsoftlabs.com/blog/2017/07/understanding-continuous-devops-lifecycle/

plan —>>code —>> build —>> test >>release —>>deploy —>>operate —>>monitor


-------------------------4)History of Devops?-------------------------
In 2008 started
In 2011
Started using DevOps Opensource tools cm sensible ,puppet ,chef

https://www.ca.com/us/rewrite/articles/devops/a-short-history-of-devops.html

-------------------------5) Devops stakholders -------------------------
https://www.quora.com/Who-are-the-key-Stakeholders-for-implementing-DevOps
PD
QA
OPS + Infra team

------------------------- 6)DevOps goals -------------------------
SMART
S—Specifi
M—measurable
A-attainable
R-relevant
T-timely
—— Main on : Improving business efficiency ,Increasing customer satisfaction ,Extending application uptime ,Boosting customer conversion ,,Enhancing values with new ideas and capabilities
-------------------------7) DevOps terminologies-------------------------
http://mspmentor.net/technologies/devops-dictionary-guide-devops-words-and-terms
	•	Agile. Used in the DevOps world to describe infrastructure, processes or tools that are adaptable and scalable. Being agile is a key focus of DevOps.
Agile method :
Define —>> Design —>> build —>> test —> release (Ops using Jenkins)

------------------------- 8)CM -------------------------
Configuration management solutions model infrastructure, continually monitor and enforce desired configurations, and automatically remediate any unexpected changes or configuration drift. By enabling you to deliver better software faster, configuration management helps lay the foundation for DevOps.
The key highlight of configuration management in DevOps is delivering,
1.Infrastructure as a code
2.Configuration as a code

Ex: Ansible,AWS,Chef,Puppet and etc,..
https://www.softwaretestinghelp.com/configuration-management-in-devops/
-------------------------9)Continuous Integration and Deployment------------------------
http://electric-cloud.com/resources/continuous-delivery-101/continuous-deployment/
Immutable infrastructure
Server-less computing
IaaS

================================================================================================
                                         VC-Version control system :Git,SVN,Perforce(P4),CVN
================================================================================================
GIT:
• Introduction
o What is Git
o About Version Control System and Types
o Difference between GIT,SVN,Perforce(P4V) and CVS
o A short history of GIT
o GIT Basics
o GIT Command Line
o Git Architecture
o Git flow
• Installing Git
o Installing on Linux
o Installing on Windows
o Installation on Mac OS X
o Initial setup
o Setting up user details with git config --global
• Git Essentials
o Creating repository
o Working tree
o Adding to a Git repository via staging and committing
o The Staging area
o Configure files and directories to ignore
o Cloning, check-in and committing
o Comparing changes
o Fetch, pull and remote
o Stashing Changes in Git
o Solving merge conflict
o The concept of Branches
o Creating the Branches, switching the branches, merging the branches.


----------------------------------What is git ?----------------------------------
As Git is a distributed version control system, it can be used as a server out of the box. Dedicated Git server software helps, amongst other features, to add access control, display the contents of a Git repository via the web, and help managing multiple repositories.
Git is a version-control system for tracking changes in computer files and coordinating work on those files among multiple people. It is primarily used for source-code management in software development, but it can be used to keep track of changes in any set of files.

Git flow architecture:
About GitHub nice explanation :
https://guides.github.com/activities/hello-world/

Git :its open source project ,originally developed in 2005 by Linus Torvalds .
At present most of enterprises are using git for version control .
Git allows a teams to work together by allowing them to using the same files for update/changes at same time .git handles the concurrent changes very efficiently .

Features git:
—powerful version control system
—mature and actively maintained
—having a distrubuted architecture ,git is an example of DVCS(hence distributed VCS)
—in addition to being distributed ,git has been designed with performance ,security and flexibility in side .
— its DVCs (distributed version control system ) but SVN its not DVCs
—thats the response multi people work on git
--It works offline



https://www.tutorialspoint.com/git/git_basic_concepts.htm
it is the most commonly used version control system today and is quickly becoming the standard for version control. Git is a distributed version control system, meaning your local copy of code is a complete version control repository. ... These fully-functional local repositories make it is easy to work offline or remotely. You commit your work locally, and then sync your copy of the repository with the copy on the server. This paradigm differs from centralized version control where clients must synchronize code with a server before creating new versions of code.

https://www.visualstudio.com/learn/what-is-git/
https://git-scm.com/book/en/v2
----------------------------------About VC ? Types ?----------------------------------

Version control systems (VCS) most commonly run as stand-alone applications, but revision control is also embedded in various types of software such as word processors and spreadsheets, collaborative web docs and in various content management systems, e.g., Wikipedia's Page history.
https://www.tutorialspoint.com/git/git_basic_concepts.htm
https://stackoverflow.com/questions/3859/what-is-the-difference-between-all-the-different-types-of-version-control

My recommendation: you're safest with either git, svn or perforce, since a lot of people use them, they are cross platform, have good guis, you can buy books about them, etc

----------------------------------Short history of Git ?----------------------------------
https://git-scm.com/book/id/v2/Getting-Started-A-Short-History-of-Git

----------------------------------Git Basics ?----------------------------------
https://www.tutorialspoint.com/git/git_basic_concepts.htm
https://www.slideshare.net/alexprut/git-architecture

------------ Installing Git --------------
In linux:
https://www.atlassian.com/git/tutorials/install-git
#yum install -y git
how to check git version ?
#git --version

In Windows : GUI git-->you should dowload the git.exe then install windows
https://www.atlassian.com/git/tutorials/install-git
Powershell
or download git package install git.dll

In Mac:
https://www.atlassian.com/git/tutorials/install-git
#brew install git

---------------------------------- About git and commands ----------------------------------
http://www.vogella.com/tutorials/Git/article.html
https://git-scm.com/book/en/v2
-------------------------------------o Git flow : Git workflow :-------------------------------------
Local repo consists of three “trees” maintained by git .the first one is working/current working directory on the system which holds the actual data/files ,second index/staging which acts as a staging area and finally the repo which points to the last commit that you have made .

o Git flow
https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow

---------------------- Git Architecture ---------------------------
https://www.google.com/search?q=git+architecture+diagram&biw=1440&bih=691&tbm=isch&source=iu&ictx=1&fir=VR-hprU-rentbM%253A%252CdMW31oIcbEwsQM%252C_&usg=AI4_-kTNlBsOES-u2jIpai2rAMSWmI52Yw&sa=X&ved=2ahUKEwj5go_NlffeAhULbo8KHReVBeQQ9QEwAHoECAYQBA#imgrc=VR-hprU-rentbM:
https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow

----------------------------------git commands ?----------------------------------
Default git protocol port : Git protocol uses the port 9148
How to clone the repo with different branch ?
#git clone -b devbranch https://github.com/KS-Organization.git classgit

For related to git commands more in detail then please follow the below links :
https://git-scm.com/docs/gittutorial
https://www.siteground.com/tutorials/git/commands.htm
https://git-scm.com/docs/gittutorial
https://www.tutorialspoint.com/git/git_basic_concepts.htm

How to copy existing repo of github(remote) to your local ?
ex:
1)HOSTNAME:gitproject ks$ git clone https://github.com/knowledgeshare99/sampleapp.git KSsampleapp
2)HOSTNAME:gitproject ks$ git clone https://github.com/knowledgeshare99/sampleapp.git

================= START : #git help <action> =================

HOSTNAME:sampleapp ks$ git help
which is like man command in linux
#git config —list

HOSTNAME:sampleapp ks$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some

===================== END : Git help ==============
================GIT COMMANDS START ============
1)git config
Repository specific configuration
You can also store repository specific settings in the .git/config file of a repository. Use the --local or use no flag at all. If neither the --system not the --global parameter is used, the setting is specific for the current Git repository.

User credential configuration
You have to configure at least your user and email address to be able to commit to a Git repository because this information is stored in each commit.

-->configure the user which will be used by Git
-->this should be not an acronym but your full name
Sytax:
#git config --global user.name "Firstname Lastname"
Ex:
#git config —global user.name knowledgeshare99
--->configure the email address
syntax:
#git config --global user.email "your.email@example.org"
Ex:
#git config —global user.email knowledgeshare99@gmail.com

c)Configuring color changes for your git repo
Syntax: #git config --global color.ui auto


2)Git init
a)To create a empty .git repository from existing directory:
#mkdir gitproject
#cd gitproject
Now create a workspace of empty directory as a "local working repo"
#mkdir samplerepo
[root@ip-172-31-24-165 gitprojects]# cd samplegit
[root@ip-172-31-24-165 samplegit]# git init
or
[root@ip-172-31-24-165 samplegit]# git init .
Note: "."(dot) means its executing on current Directory
Initialized empty Git repository in /home/ec2-user/gitprojects/samplegit/.git/
[root@ip-172-31-24-165 samplegit]# ls -lrta
total 0
drwxr-xr-x 4 root root  41 Feb 18 14:06 ..
drwxr-xr-x 3 root root  18 Feb 19 10:44 .
drwxr-xr-x 7 root root 119 Feb 19 10:44 .git


b)To create a new workspace directory by git / How to create a repository from git ?
#git init <directory-name>
[root@ip-172-31-24-165 gitprojects]# git init firstworkrepo
Initialized empty Git repository in /home/ec2-user/gitprojects/firstworkrepo/.git/
[root@ip-172-31-24-165 gitprojects]#

3)Git clone:
Cloning a repository
The git clone command copies an existing Git repository. This copy is a working Git repository with the complete history of the cloned repository. It can be used completely isolated from the original repository.
Git supports several transport protocols to connect to other Git repositories; the native protocol for Git is also called git.
The following command clones an existing repository using the Git protocol. The Git protocol uses the port 9148 which might be blocked by firewalls.
Syntax:
#git clone <URL-OF-GITHUB-Remote>

Ex1:
#git clone https://github.com/knowledgeshare99/samplerepo.git

Ex2:Cloning a repo with taking existing branch of remote github as "dev_branch"
How to clone a remote repo into custom repo local and creating new repository as "sampleclass" using exiting remote repo
#git clone -b devb_ranch https://github.com/KS-Organization/samplerepo.git sampleclass

Ex3:Cloning a repo with taking existing branch of github as "dev"
[root@ip-172-31-24-165 gitprojects]# git clone -b dev_branch https://github.com/knowledgeshare99/samplerepo.git
Cloning into 'samplerepo'...
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 16 (delta 0), reused 4 (delta 0), pack-reused 12
Unpacking objects: 100% (16/16), done.

4)Git add/commit/status :
Git status :To check status of tracked/untracked/modified details
here i created a file1.txt and performed the below steps
[root@ip-172-31-24-165 creatdirgitrepo]# vi file1.txt

a)[root@ip-172-31-24-165 creatdirgitrepo]# git status
On branch master
No commits yet
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	file1.txt
nothing added to commit but untracked files present (use "git add" to track)

b)Git add: To add untracked files into staging area
[root@ip-172-31-24-165 creatdirgitrepo]# git add file1.txt
[root@ip-172-31-24-165 creatdirgitrepo]# git status
On branch master
No commits yet
Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   file1.txt

c)Git commit :To add the staging aread files into .git repo
Then finally commiting to .git repo
[root@ip-172-31-24-165 creatdirgitrepo]# git commit -m "This is my local repo project pushing to class-repo github"
[master (root-commit) ce6d134] This is my local repo project pushing to class-repo github
 1 file changed, 3 insertions(+)
 create mode 100644 file1.txt
 [root@ip-172-31-24-165 creatdirgitrepo]# git status
 On branch master
 nothing to commit, working tree clean


5)
#git commit -m “message”
Note: Here you can push your local changes of git repo to origin of dev_branch only since you have cloned "dev_branch" instead of default(master)

6)git push : To push your changes content of your local repo into remote github
Synatx: #git push <origin-of-remote> <remote-branch>
Ex:
#git push origin dev_branch
localhost: KSb$ git push origin dev_branch

7)git help: which helps on git commands that how to pass the command


8)Git status : To track/untracked/modified/remove files of the repo
ex:
[root@ip-172-31-24-165 initsecondrepo]# git status
On branch master
No commits yet
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	file1.txt
nothing added to commit but untracked files present (use "git add" to track)

9)Git add and git status :
Ex:
[root@ip-172-31-24-165 initsecondrepo]# git add file1.txt
[root@ip-172-31-24-165 initsecondrepo]# git status
On branch master
No commits yet
Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   file1.txt

10)Git commit and git status :
Ex:
[root@ip-172-31-24-165 initsecondrepo]# git commit -m "First file1.txt added into my local repo"
[master (root-commit) f527576] First file1.txt added into my local repo
 1 file changed, 2 insertions(+)
 create mode 100644 file1.txt
[root@ip-172-31-24-165 initsecondrepo]# git status
On branch master
nothing to commit, working tree clean


11)Git push : Created a repo  already in GitHub as "local-remoterepo" then whatever I created in my local working repo pushing to git as follows

 a)
 #git push --mirror git@github.com:username/project.git
Ex:
[root@ip-172-31-24-165 initsecondrepo]# git push --mirror https://github.com/knowledgeshare99/local-remoterepo.git
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 3, done.
Writing objects: 100% (3/3), 263 bytes | 263.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/knowledgeshare99/local-remoterepo.git
 + 310dbfe...f527576 master -> master (forced update)

b)
Tags aren’t automatically pushed when you push a branch or use the --all flag. the --tags flag sends all of your local tags to theremote repo..
syntax :#git push <remote> --tags
Ex:

c)
Push all of your local branches to the specified remote.
syntax: git push <remote> --all
Ex:

12)git branch : To know the branches on your repo.Pointer to which branch
 Ex:

 a)To check the branches
Ex:#git branch
 [root@ip-172-31-24-165 initsecondrepo]# git branch
 * master
 [root@ip-172-31-24-165 initsecondrepo]#

b)To create a branch(there are many ways using with checkout and branch)
Synatax:Uing branch
#git branch <branch-name>
Ex:
[root@ip-172-31-24-165 initsecondrepo]# git branch dev_branch
[root@ip-172-31-24-165 initsecondrepo]# git branch
  dev_branch
* master
[root@ip-172-31-24-165 initsecondrepo]#

Other way to create a branch
Synatax: Using checkout to create a branch and switching to created branch
[root@ip-172-31-24-165 initsecondrepo]# git checkout -b release
Switched to a new branch 'release'
[root@ip-172-31-24-165 initsecondrepo]# git branch
  dev_branch
  master
* release
[root@ip-172-31-24-165 initsecondrepo]#

c)To delete a branch
Syntax: #git brnach -d <branch-name>
Ex:
#git checkout -d release

d)How to fetch all remote branches to local repo ?
Ex:#cd /home/ec2-user/classrep/mystaticwebsite

After cloning a repo and wanting to fetch all branches, git complains (rightfully so) that it does not think it makes sense to create 'HEAD' manually. When I threw out master, all was well:

#git branch -r | grep -v '\->' | grep -v 'master' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
https://gist.github.com/grimzy/a1d3aae40412634df29cf86bb74a6f72

13)Git log :To see the history of changes commit files
Syntax: #git log
Ex1:
[root@ip-172-31-24-165 initsecondrepo]# git log
commit f527576553f7615d45e6f00739680d608e38ab7d (HEAD -> release, master, dev_branch)
Author: KnowLedge <knowledgeshare99@gmail.com>
Date:   Tue Feb 19 11:05:36 2019 +0000

    First file1.txt added into my local repo

Ex2:Limit number of commits by <limit>. E.g. git log -5 will limit to 5 commits.
Syntax: #git log -<limit>

Ex2:#git log --oneline
Condense each commit to a single line.

Ex3:#git log -p
Display the full di  of each commit.

Ex4:#git log --stat
Include which  les were altered and the relative number of lines that were added or deleted from each of them.

Ex5:#git log --author= ”<pattern>”
Search for commits by a particular author.

Ex6:#git log --grep=”<pattern>”
Search for commits with a commit message that matches <pattern>.

Ex7:#git log <since>..<until>
Show commits that occur between <since> and <until>. Args can be a commit ID, branch name, HEAD, or any other kind of revision reference.

Ex8:#git log -- <file>
Only display commits that have the specified  file.

Ex9:#git log --graph --decorate
--graph flag draws a text based graph of commits on left side of commit msgs. --decorate adds names of branches or tags of commits shown.


14)Git diff : To see the differences of branches

a)git diff HEAD
Show diference between working directory and last commit.
b)git diff --cached
Show difference between staged changes and last commit

c)How to check the difference of files ?
#git diff tetfile testfile2

Syntax: #git diff <first_branch> <second-branch>
Ex:
[root@ip-172-31-24-165 initsecondrepo]# git diff dev_branch release
diff --git a/file2-release.txt b/file2-release.txt
new file mode 100644
index 0000000..91b2c4c
--- /dev/null
+++ b/file2-release.txt
@@ -0,0 +1,2 @@
+hello
+this is my release branch file
[root@ip-172-31-24-165 initsecondrepo]#


15)Git show : show any object in Git in human-readable format
Syntax: #git show [SHA]
Ex:
Syntax: #git show <commitID>
[root@ip-172-31-24-165 initsecondrepo]# git show 91b2c4c
hello
this is my release branch file
[root@ip-172-31-24-165 initsecondrepo]#

16)Git stash : Temporarily store modified, tracked files in order to change branchesgit stash
Save modified and staged changes
a)list stack-order of stashed file changes
#git stash list

b)write working from top of stash stack
#git stash pop

c)discard the changes from top of stash stack
#git stash drop
d)Save modified and staged changes
#git stash

e)list stack-order of stashed file changes
#git stash list

f)write working from top of stash stack
#git stash pop

g)discard the changes from top of stash stack
#git stash drop

17)Git reset :clear staging area, rewrite working tree from specified commit .There are two types of resets a)soft b)hard
Remove <file> from the staging area, but leave the working directory unchanged. This unstages a file without overwriting any changes.

Syntax: #git reset --hard [commit]
a)using soft method
Ex: #git reset --soft [commit]
ex:
[root@ip-10-0-1-162 samplerepo]# git reset --soft HEAD~1
which means that latest commitID reverted to staging area/index area

b)Using Hard
#git reset --soft HEAD~3
ex:
#git reset --soft HEAD~3 or #git reset HEAD~3


18)Using Git merge :
Syntax: #git merge <branch-feature>

Ex:
[root@ip-172-31-24-165 creatdirgitrepo]# git branch
* dev
  master
[root@ip-172-31-24-165 creatdirgitrepo]# cat file1.txt
hello
this is my first createdrepo
pushing to remote github repo: class-repo
[root@ip-172-31-24-165 creatdirgitrepo]# vi file1.txt
4th line added into this file
[root@ip-172-31-24-165 creatdirgitrepo]# cat file1.txt
hello
this is my first createdrepo
pushing to remote github repo: class-repo
4th line adding for testin

[root@ip-172-31-24-165 creatdirgitrepo]# git branch
* dev
  master
[root@ip-172-31-24-165 creatdirgitrepo]# git checkout master
Switched to branch 'master'
[root@ip-172-31-24-165 creatdirgitrepo]# git branch
  dev
* master
[root@ip-172-31-24-165 creatdirgitrepo]# cat file1.txt
hello
this is my first createdrepo
pushing to remote github repo: class-repo
[root@ip-172-31-24-165 creatdirgitrepo]# git merge dev
Updating ce6d134..6414672
Fast-forward
 file1.txt | 1 +
 1 file changed, 1 insertion(+)
[root@ip-172-31-24-165 creatdirgitrepo]#




19)git push and git pull:
About #git pull :Fetch the speci ed remote’s copy of current branch and immediately merge it into the local copy.

About Git push :Push the branch to <remote>, along with necessary commits and objects. Creates named branch in the remote repo if it doesn’t exist.

Realtime scenarios :

Conflicting between local repo and remote repo:Then how to fix ,first you pull the latest content of remote repo into your local repo then try pushing your local content to remote repo

a)Conflict checking suing push command
root@ip-172-31-24-165 staticclassrepo]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
To https://github.com/knowledgeshare99/staticwebsite.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/knowledgeshare99/staticwebsite.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

b)Then pull the latest data to ur local
Here
pull = fetch + merge
[root@ip-172-31-24-165 staticclassrepo]# git pull origin master
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/knowledgeshare99/staticwebsite
 * branch            master     -> FETCH_HEAD
   2426fa4..0a03bee  master     -> origin/master
Merge made by the 'recursive' strategy.
 README.md | 1 +
 1 file changed, 1 insertion(+)
[root@ip-172-31-24-165 staticclassrepo]#

c)After pulling the latest data then you can push ur local data to remot e
[root@ip-172-31-24-165 staticclassrepo]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 7, done.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (7/7), 974 bytes | 974.00 KiB/s, done.
Total 7 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
To https://github.com/knowledgeshare99/staticwebsite.git
   0a03bee..57a2eef  master -> master
[root@ip-172-31-24-165 staticclassrepo]#

20)git revert :Create new commit that undoes all of the changes made in <commit>, then apply it to the current branch.
https://stackoverflow.com/questions/927358/how-to-undo-the-last-commits-in-git

Syntax: #git revert

Ex:
#git revert —hard HEAD~1 — if you commit changes already pushed to GitHub then using someone then need to revert the changes
ex: #git revert HEAD
[root@ip-10-0-1-162 samplerepo]# git revert HEAD
[root@ip-10-0-1-162 samplerepo]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 3, done.
Compressing objects: 100% (3/3), done.
[root@ip-10-0-1-162 samplerepo]# git revert origin HEAD


21)Git fetch :Fetches a speci c <branch>, from the repo. Leave o  <branch> to fetch all remote refs.
Syntax : git fetch <remote> <branch>
Ex: #git fetch origin master

22)Git remote : Create a new connection to a remote repo. After adding a remote, you can use <name> as a shortcut for <url> in other commands
Syntax: #git remote add <name> <url>
Ex:
a)To see the remote versions
#git remote -v
b)To add into origin URL of remote
Syntax:
#git remote add origin url
Ex1:
------------…or create a new repository on the command line---------
echo "# temp-delete" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/knowledgeshare99/temp-delete.git
git push -u origin master

Ex2:
-------------…or push an existing repository from the command line----------
git remote add origin https://github.com/knowledgeshare99/temp-delete.git
git push -u origin master

Ex1: using pushing an existing repository from CLI to github:
a)[ansadm@ip-10-0-1-162 ansible]$ git init .
b)[ansadm@ip-10-0-1-162 ansible]$ git add .
c)#git remote add origin https://github.com/knowledgeshare99/ansible-ks-all.git
d)#[ansadm@ip-10-0-1-162 ansible]$ git pull origin master
e)#git push -u origin master
[ansadm@ip-10-0-1-162 ansible]$ git push -u origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 76, done.
Compressing objects: 100% (46/46), done.
Writing objects: 100% (76/76), 1.29 MiB | 4.12 MiB/s, done.
Total 76 (delta 10), reused 0 (delta 0)
remote: Resolving deltas: 100% (10/10), done.
To https://github.com/knowledgeshare99/ansible-ks-all.git
   eb444cf..717e8fa  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Note: For more details . please take a look at https://github.com/knowledgeshare99/temp-delete


Ex2:
a)[ansadm@ip-10-0-1-162 ansible]$ cd /var/lib/jenkins/
b)[ansadm@ip-10-0-1-162 ansible]$ git init .
c)[ansadm@ip-10-0-1-162 jenkins]$ sudo git remote add origin https://github.com/knowledgeshare99/jenkins-ks-all
d)[ansadm@ip-10-0-1-162 ansible]$ git branch
e)[ansadm@ip-10-0-1-162 ansible]$ git push -u origin master



23)Git rebase : Interactively rebase current branch onto <base>. Launches editor to enter commands for how each commit will be transferred to the new base.
Syntax: #git rebase -i <base>

24)Git grep :
#git grep
Lets you search through your trees of content for words and phrases. Example: git grep "www.siteground.com" -- *.php 

25)Git rm

26)Git ls :
Syntax: #git ls-tree
Shows a tree object, including the mode and the name of each item and the SHA-1 value of the blob or the tree that it points to.
Example: git ls-tree master^{tree} 100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 

27)git cat-file
Used to view the type of an object through the SHA-1 value. Example: git cat-file -t e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 blob 

================GIT COMMANDS END ============
------------- Interview point of questions and answers  -----------------

1)How to create empty .git repo on existing local direcory ?

Git init. — create a new repository
Ex1:Creates only empty .git repo on existing directory
1st method : using "git init <reponame>"
HOSTNAME:gitproject ks$ git init samplerepo

Ex2:Creates a new directory and .git repo
2nd method: creating a .git structure repo
without using git init <reponame>
HOSTNAME:gitproject ks$ cd temprepo/
HOSTNAME:temprepo ks$ ls -rla
total 0
drwxr-xr-x  4 rb  SEA\Domain Users  128 Nov 21 19:26 ..
drwxr-xr-x  2 rb  SEA\Domain Users   64 Nov 21 19:26 .
HOSTNAME:temprepo ks$ git init .
Initialized empty Git repository in /Users/rb/gitproject/temprepo/.git/
HOSTNAME:temprepo ks$


2)How to add a files or projects data to git VC ?
using #Git add
#git add *
or
#git add .
or
#git add <filename>

3)
How to commit ? when to commit ? Why its use ?
Git commit
#git commit -m <commit message means from staging to the repo >

4)How to check the git status I?
It shows the untracked files that needs to be staged
Git status

6)How to check the commit logs ? Who has done recently changes ?
Git log

7)How to remove a file or folder from git repo ? what is difference normal rm  and git rm ?
Ex:
#git rm

8)How to see the history of .git repo data ? who has done based on Author ? data and time ?
If you also want to see complete diffs at each step, use
#git log -p —stat
#git log —graph
Often the overview of the change is useful to get a feel of each step
git log --stat --summary
Use git log --diff-filter=D --summary to get all the commits which have deleted files and the files deleted;

#git log --pretty=oneline

9)How to recover the deleted file where no commit was made after the delete from local directoy ?
git recover

or
Use #git checkout $commit~2   -->filename to restore the deleted file.

10)How to remove the commited fils permanerly from .git repo ?
git rm
git rm -rf

11)
How to invoke into different branch /checkout the files to discard the changes ?
Git checkout —
#git checkout — testfile
To discard the changes what you have made in “teaching area means commit files”

12)
How to check that how many branches are created for repo/project ?
Git branch
HOSTNAME:sampleapp ks$ git branch
* master
HOSTNAME:sampleapp ks$ pwd
/Users/rb/gitproject/sampleapp

13)How to create a branch ? What it uses ?
ex:
HOSTNAME:sampleapp ks$ git branch devperson
HOSTNAME:sampleapp ks$ git branch
  devperson
* master
HOSTNAME:sampleapp ks$ git checkout -b tempbranch
Switched to a new branch 'tempbranch'
HOSTNAME:sampleapp ks$ git branch
  devperson
  master
* tempbranch

14)what is the difference git pull and git fetch ?
pull = fetch + merge
#git pull
Fetches the files from the remote repository and merges it with your local one. This command is equal to the git fetch and the git merge sequence. Example: git pull origin
Ex1:Means i am pulling the data from SCM(Github remote master) to local repository
#git pull origin master

Ex2:
From local repo branch(dev) to other local branch(uat) repo
path1 :
/usr/local/repos/samplerepo1
Path2:
/usr/local/repos/samplerepo2#pwd
/usr/local/repos/samplerepo2
#git push -b master /usr/local/repos/samplerepo1

15) How to fetch all branch of remote ?

#git branch
* master
dev
#git pull --all
It fetches and merges of all remote branches
Note:Before fetching of remote branches all then you must be on "master" branch in your local

---------------- difference soft and hard in git using reset and revert -------------------
https://stackoverflow.com/questions/927358/how-to-undo-the-last-commits-in-git
---------About git reset :-------------
https://git-scm.com/docs/git-reset
#git reset --soft HEAD~3
ex:
[root@ip-10-0-1-162 samplerepo]# git reset --soft HEAD~1
which means that latest commitID reverted to staging aread/index area

#git reset —hard HEAD~1

ex:
git reset --hard HEAD~ or git reset HEAD~

#git commit --amend -m "message"

-------------About git revert:------------
https://git-scm.com/docs/git-revert
#git revert —hard HEAD~1 — if you commit changes already pushed to GitHub then using someone then need to revert the changes of last two commits.
ex1: #git revert HEAD
[root@ip-10-0-1-162 samplerepo]# git revert HEAD
[root@ip-10-0-1-162 samplerepo]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 3, done.
Compressing objects: 100% (3/3), done.
[root@ip-10-0-1-162 samplerepo]# git revert origin HEAD

Ex2: Revert
$git revert HEAD~3
Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.

Ex3:Revert :
$git revert -n master~5..master~2
Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.

------------------------------------------ Some more realtime questions ------------------------------------------

A)
How to push existing repository code into remote GitHub?
https://konstantin.blog/2011/transfer-your-existing-git-repository-to-github/

Created a repo in GitHub then whatever I created in my local working repo pushed to git as follows
 $ git push --mirror git@github.com:username/project.git
 ex:
[root@ip-172-31-23-200 samplenewpush]# git push --mirror https://github.com/classgithub/samplepushrepo.git
Username for 'https://github.com': classgithub
Password for 'https://classgithub@github.com':
Counting objects: 3, done.

B)How to merge the content from feature branch to master branch ?
Git merge
Ex:
HOSTNAME:sampleapp ks$ git branch
* devperson
  master
i added one line into file1.txt in devperson branch after i switched to master branch ,when i looked at file1.txt content ,it dislays(empty).now
if you want to copy/replace/modifed/newly added files/folders/hiddenfiles into master branch from devperson branch .Execure the below command in master branch
1) git checkout master
2)git branch
* master
devperson
3)git status
4)cat file1.txt (comparing "devperson" branch .so here its empty file)
5)git merge devperson
HOSTNAME:sampleapp ks$ git merge devperson
Updating ee44ed8..a4ed09e
Fast-forward
 file1.txt | 1 +
 1 file changed, 1 insertion(+)
6)again check the content of file1.txt in master branch
HOSTNAME:sampleapp ks$ cat file1.txt
this is my first line

Git fetch
Git rebase
Git tag
Git diff

difference :
pull = fetch + merge

C)How to track the cached files in case of you want to jump into other work in middle of something that do not disturb and can use it in futre ?
Using #git stash
Ex1: Explained clearly
#git stash
SYNOPSIS
       git stash list [<options>]
       git stash show [<stash>]
       git stash drop [-q|--quiet] [<stash>]
       git stash ( pop | apply ) [--index] [-q|--quiet] [<stash>]
       git stash branch <branchname> [<stash>]
       git stash [push [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet]
                    [-u|--include-untracked] [-a|--all] [-m|--message <message>]
                    [--] [<pathspec>...]]
       git stash clear
       git stash create [<message>]
       git stash store [-m|--message <message>] [-q|--quiet] <commit>

Ex2:
To see the list of stashed files
HOSTNAME:samplerepo1 ks$ git stash list
stash@{0}: WIP on master: f560343 this is my first.tt file

Ex3:How to pass the working file into stach area ?
HOSTNAME:samplerepo1 ks$ git stash apply
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)
	modified:   file.txt
no changes added to commit (use "git add" and/or "git commit -a")
HOSTNAME:samplerepo1 ks$ git status

Temporarily saves changes that you don’t want to commit immediately.
You can apply the changes later. Example: git stash Saved working directory and index state "WIP on master: 84f241e first commit" HEAD is now at 84f241e first commit (To restore them type "git stash apply") 

D)How to create a versions for branches ?
#git tag
Tags a specific commit with a simple, human readable handle that never moves. Example: git tag -a v1.0 -m 'this is version 1.0 tag' 

More about tagging :
https://git-scm.com/book/en/v2/Git-Basics-Tagging
Git supports two types of tags: lightweight and annotated.
A lightweight tag is very much like a branch that doesn’t change — it’s just a pointer to a specific commit.
Annotated tags, however, are stored as full objects in the Git database. They’re checksummed; contain the tagger name, email, and date; have a tagging message; and can be signed and verified with GNU Privacy Guard (GPG). It’s generally recommended that you create annotated tags so you can have all this information; but if you want a temporary tag or for some reason don’t want to keep the other information, lightweight tags are available too.


E)How to display the content of a file using commitID number ?
git show
Shows information about a git object. Example: git show commit 84f241e8a0d768fb37ff7ad40e294b61a99a0abe Author: User <user@domain.com> Date: Mon May 3 09:24:05 2010 +0300 first commit diff --git a/README b/README new file mode 100644 index 0000000..e69de29 

ex:Which shows the current commitID details
HOSTNAME:samplerepo1 ks$ git show
commit abb31ae4fc111dbbe82b21de938cd662f4b2cb7d (HEAD -> master)
Author: KS <rtemp@HOSTNAME.sea.corp.expecn.com>
Date:   Mon Nov 26 20:15:37 2018 +0530

    first project is done

diff --git a/file.txt b/file.txt
index e9f34dd..0a0c583 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 this is my own file testing for stash
+added 2nd file
+adding final content


ex:Showing specific commitID details

HOSTNAME:samplerepo1 ks$ git show ae0bab2a22080b8c0b6a63b7cfdfd946b0113490
commit ae0bab2a22080b8c0b6a63b7cfdfd946b0113490
Author: KSSekhar B <rb@HOSTNAME.sea.corp.expecn.com>
Date:   Mon Nov 26 20:12:11 2018 +0530

    2nd proect adding

F)How to compare the files ?
diff --git a/file2.txt b/file2.txt
new file mode 100644
index 0000000..d7619e7
--- /dev/null
+++ b/file2.txt
@@ -0,0 +1 @@
+this is my 2nd project


G)How to fetch the git history from 1st march 2018 to 1st march 2019 ?
From date wise:
$ git log --stat --name-status --since “APR 20 2017” --until “MAY 23 2017"  --pretty=format:“%cN %cd %s” > commitsBetweenApr20AndMay23.txt
$ vim commitsBetweenApr20AndMay23.txt

H)
How to undo the last commits in Git?
prefer to use git rebase -i for this job, because a nice list pops up where I can choose the commits to get rid of. It might not be as direct as some other answers here, but it just feels right.
Choose how many commits you want to list, then invoke like this (to enlist last three)
#git rebase -i HEAD~3
https://stackoverflow.com/questions/36148602/git-pull-vs-git-rebase

git rebase in its simplest form is a command which will merge another branch(feature) into the branch(master) where you are currently working, and move all of the local commits that are ahead of the rebased branch to the top of the history on that branch.
https://git-scm.com/docs/git-rebase
I)
what is staging or index area ? difference both ?
https://git.wiki.kernel.org/index.php/WhatIsTheIndex
The truth is: the index is a staging area.which means that when you do a ""#git add ."" that means its a staging area or index area(before commit)

J)
how to avoid that ignore the files that should not be added to staging area ?
Ans: Using .gitignore
Ex: # .gitignore
https://www.atlassian.com/git/tutorials/saving-changes/gitignore

[root@ip-10-0-1-162 staticwebsite]# ls -lart
total 36
drwx------ 5 ec2-user ec2-user   150 Nov 28 15:04 ..
drwxr-xr-x 2 root     root        75 Nov 28 15:04 css
-rw-r--r-- 1 root     root        76 Nov 28 15:04 README.md
drwxr-xr-x 2 root     root       143 Nov 28 15:04 font
drwxr-xr-x 2 root     root       282 Nov 28 15:04 img
drwxr-xr-x 2 root     root       124 Nov 28 15:04 js
-rwxr-xr-x 1 root     root        32 Nov 28 15:04 index.html-old
-rwxr-xr-x 1 root     root     21618 Nov 28 15:04 index.html
drwxr-xr-x 2 root     root       143 Nov 28 15:04 owl-carousel
drwxr-xr-x 8 root     root       163 Nov 28 15:04 .git
-rw-r--r-- 1 root     root        36 Nov 28 15:10 .gitignore
drwxr-xr-x 8 root     root       157 Nov 28 15:10 .
[root@ip-10-0-1-162 staticwebsite]# cat .gitignore
log/debug.log
*.log
*.txt
css/*.gif
[root@ip-10-0-1-162 staticwebsite]#

==================================================================================================
                                  5)SCM : Github,Perforce(p4v),Bitbucket,
===================================================================================================
Note : Before proceeding Github . Please create a GitHub account
GitHub:
• About GitHub
• What is Repository?
• Creating Remote Repository
• The Branches
• Switching branches
• Forking vs Branching
• Import existing repo in UI
• Creating a pull request from local Git repo to Remote Github
• Organization
• Merging a pull request
• Personal access token- SAML SSO
• Webhooks Continuous Integration
• Integration GitHub and Jenkins
• Configure SSH Keys - GitHub
----------------------------------about github ? and branches ?----------------------------------
Github account :
Create GitHub account
— creating organization and invite members ,created pull requests from members and merge into organisation

D)Create and use a repository
E)Start and manage a new branch
F)Make changes to a file and push them to GitHub as commits
G)Open and merge a pull request


https://guides.github.com/activities/hello-world/#merge

https://guides.github.com/activities/hello-world/

----------------------------------Git Structure ?----------------------------------
https://www.siteground.com/tutorials/git/directory-structure/
https://www.slideshare.net/alexprut/git-architecture

./git file structure:

Description : Only used by Owner of git repo
config : file contains your project specific configuration options
info : directory keeps a global exclude file for ignore patterns that you don't want to track in a .gitingore file
hooks :contains your clients - or server-side hooks scripts
object :directory stores all the content of your database
refs: directory stores pointers into commit objects
HEAD :file points to the branch you currently have checked out
index: file is where Git stores your staging area information

Git object 4 types :Tree objects , Commit objects ,Blob objects ,Tag objects

----------------- What is Repository? ----------------
Both Git and GitHub refer to this as a repository, or “repo” for short, a digital directory or storage space where you can access your project, its files, and all the versions of its files that Git saves. ...
A Readme file is usually a text file that explains a bit about the project ,which is in metadata extension.It tells about who is the owner,team and versions,tracking notes updates and team info,etc,..
https://help.github.com/articles/about-repositories/
https://guides.github.com/activities/hello-world/

About Repository ?
A repository is like a folder for your project. Your project's repository contains all of your project's files and stores each file's revision history. You can also discuss and manage your project's work within the repository.

----------------- • Creating Remote Repository -----------
https://help.github.com/articles/create-a-repo/

through CLI :
https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
https://help.github.com/articles/adding-a-remote/

------------------ The Branches: Creating and Switching branches  --------------------
https://help.github.com/articles/about-branches/

Creating ,Deleting,switching branches :
https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches
https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/

----------------- • Forking vs Branching -------------
https://stackoverflow.com/questions/3611256/forking-vs-branching-in-github

----------------- • Import existing repo in UI ----------
https://help.github.com/articles/importing-a-repository-with-github-importer/
https://stackoverflow.com/questions/12799719/how-to-upload-a-project-to-github

---------- Creating a pull request from local Github to Remote Github -----------

How to create a pull request ?
https://www.digitalocean.com/community/tutorials/how-to-create-a-pull-request-on-github
https://help.github.com/articles/checking-out-pull-requests-locally/

---------- Merging a pull request from organization  -------------
Step 1) First clone the repo of Organiaztion passing "userid" during local system
ex:
git clone https://<userid>@github.com/orginaization/reposample.git

Step2) create a branch in local system
#git branch dev

Step 3)
#git checkout dev

Step 4) Do modify any existing file or create a new file on dev branch local system
#git add <file>
#git commit -m "message "
#git push origin dev

Step 5)you can see in yellow ash color appearing in that organization repo in github
so here click on "create a pull request "
base: master >-- compare:dev

Step 6)After creating pull request you can ask someone to review that pull who are there in team members under organization

Step 7)Just review .please ask other to merge the pull request

Step 8) Please check latest content in master branch of remo github organization

About merge methods:
https://help.github.com/articles/about-merge-methods-on-github/

https://help.github.com/articles/merging-a-pull-request/
Merges :
https://help.github.com/articles/merging-an-upstream-repository-into-your-fork/

Merge conflicts:
https://help.github.com/articles/resolving-a-merge-conflict-on-github/


------------ Organization in Github ----------
About Organization:
https://help.github.com/articles/about-organizations/
https://blog.github.com/2010-06-29-introducing-organizations/

Creating Organization:
https://help.github.com/articles/creating-a-new-organization-from-scratch/

Inviting members to Organization:
https://developers.sap.com/tutorials/webide-github-creating-org.html
Difference UserID and Organization:
https://help.github.com/articles/differences-between-user-and-organization-accounts/

---------- Personal access token- SAML SSO---------
https://help.github.com/articles/authenticating-to-a-github-organization-with-saml-single-sign-on/
Authorizing an SSH key for use with a SAML single sign-on organization:
https://help.github.com/articles/authorizing-an-ssh-key-for-use-with-a-saml-single-sign-on-organization/

Authorizing a personal access token for use with a SAML single sign-on organization:
https://help.github.com/articles/authorizing-a-personal-access-token-for-use-with-a-saml-single-sign-on-organization/

How to create a "Personal Access token" :
Go to your personal "github" account --> right corner side click on user id --> settings ---> click on "Developer settings"--->

then click on "Personal access tokens "--> click on "generate new token"
Note: Please copy this token into your personal data .if you loss this then you can not revert the same

--------------- Webhooks Continuous Integration -------------------
https://blog.tentamen.eu/jenkins-and-github-integration-using-webhooks/
https://medium.com/@marc_best/trigger-a-jenkins-build-from-a-github-push-b922468ef1ae


------------- Configure SSH Keys - GitHub ------------
https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/

Testing SSH Connection to Github :
https://help.github.com/articles/testing-your-ssh-connection/

Ex1:How to test the personal token access is working or not ?
[ec2-user@ip-10-0-1-162 .ssh]$ ssh -T git@github.com
The authenticity of host 'github.com (192.30.255.113)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
RSA key fingerprint is MD5:16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.255.113' (RSA) to the list of known hosts.
Hi knowledgeshare99! You've successfully authenticated, but GitHub does not provide shell access.
[ec2-user@ip-10-0-1-162 .ssh]$

4)How to generate ssh-key gen ?
https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/

----------------------------------Git rebase ?----------------------------------
https://git-scm.com/docs/git-rebase
git-rebase - Reapply commits on top of another base tip
ex:

git rebase in its simplest form is a command which will merge another branch into the branch where you are currently working, and move all of the local commits that are ahead of the rebased branch to the top of the history on that branch.

------------------------- Github Organization(Class-Organis) Repository work in CLI( and also Local Github remote merging with Remote GitHub Class-Organisatin from Local Worspace ) ----------------------

[root@ip-172-31-24-165 classprojects]# pwd
/home/ec2-user/classprojects
[root@ip-172-31-24-165 classprojects]# ls -rlt
total 0
drwxr-xr-x 8 root root 139 Feb 19 13:52 staticwebsite
drwxr-xr-x 8 root root 159 Feb 19 13:58 devstaticrepo
drwxr-xr-x 3 root root  18 Feb 19 14:00 existdirrepo
drwxr-xr-x 3 root root  35 Feb 19 14:35 creatdirgitrepo
drwxr-xr-x 8 root root 139 Feb 19 14:54 staticclassrepo
[root@ip-172-31-24-165 classprojects]# git clone https://github.com/classv5-organi/mysimple-orgrepo.git
Cloning into 'mysimple-orgrepo'...
remote: Enumerating objects: 12, done.
remote: Counting objects: 100% (12/12), done.
remote: Compressing objects: 100% (9/9), done.
remote: Total 12 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (12/12), done.
[root@ip-172-31-24-165 classprojects]# pwd
/home/ec2-user/classprojects
[root@ip-172-31-24-165 classprojects]# ls -lrt
total 0
drwxr-xr-x 8 root root 139 Feb 19 13:52 staticwebsite
drwxr-xr-x 8 root root 159 Feb 19 13:58 devstaticrepo
drwxr-xr-x 3 root root  18 Feb 19 14:00 existdirrepo
drwxr-xr-x 3 root root  35 Feb 19 14:35 creatdirgitrepo
drwxr-xr-x 8 root root 139 Feb 19 14:54 staticclassrepo
drwxr-xr-x 3 root root  76 Feb 21 15:06 mysimple-orgrepo
[root@ip-172-31-24-165 classprojects]# cd mysimple-orgrepo
[root@ip-172-31-24-165 mysimple-orgrepo]# cat .git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = https://github.com/classv5-organi/mysimple-orgrepo.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[root@ip-172-31-24-165 mysimple-orgrepo]# ls -lrt
total 12
-rw-r--r-- 1 root root 26 Feb 21 15:06 merging-dupl.txt
-rw-r--r-- 1 root root 31 Feb 21 15:06 file1.txt
-rw-r--r-- 1 root root 66 Feb 21 15:06 README.md
[root@ip-172-31-24-165 mysimple-orgrepo]# ls -lrta
total 12
drwxr-xr-x 8 root root 138 Feb 21 15:06 ..
-rw-r--r-- 1 root root  26 Feb 21 15:06 merging-dupl.txt
-rw-r--r-- 1 root root  31 Feb 21 15:06 file1.txt
-rw-r--r-- 1 root root  66 Feb 21 15:06 README.md
drwxr-xr-x 8 root root 163 Feb 21 15:06 .git
drwxr-xr-x 3 root root  76 Feb 21 15:06 .
[root@ip-172-31-24-165 mysimple-orgrepo]# pwd
/home/ec2-user/classprojects/mysimple-orgrepo
[root@ip-172-31-24-165 mysimple-orgrepo]# vi file2.txt
[root@ip-172-31-24-165 mysimple-orgrepo]# git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	file2.txt

nothing added to commit but untracked files present (use "git add" to track)
[root@ip-172-31-24-165 mysimple-orgrepo]# git add file2.txt
[root@ip-172-31-24-165 mysimple-orgrepo]# git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   file2.txt

[root@ip-172-31-24-165 mysimple-orgrepo]# git commit -m "just testing the code from local to remote"
[master 92f0d53] just testing the code from local to remote
 1 file changed, 2 insertions(+)
 create mode 100644 file2.txt
[root@ip-172-31-24-165 mysimple-orgrepo]# git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[root@ip-172-31-24-165 mysimple-orgrepo]# git branch
* master
[root@ip-172-31-24-165 mysimple-orgrepo]# git push origin dev
error: src refspec dev does not match any.
error: failed to push some refs to 'https://github.com/classv5-organi/mysimple-orgrepo.git'
[root@ip-172-31-24-165 mysimple-orgrepo]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 3, done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 403 bytes | 403.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/classv5-organi/mysimple-orgrepo.git
   3b8c216..92f0d53  master -> master
[root@ip-172-31-24-165 mysimple-orgrepo]# git clone https:purusoth^Cgithub.com/classv5-organi/mysimple-orgrepo.git
[root@ip-172-31-24-165 mysimple-orgrepo]# pwd
/home/ec2-user/classprojects/mysimple-orgrepo
[root@ip-172-31-24-165 mysimple-orgrepo]# cd ..
[root@ip-172-31-24-165 classprojects]# pwd
/home/ec2-user/classprojects
[root@ip-172-31-24-165 classprojects]#
[root@ip-172-31-24-165 classprojects]# ls- lrt
bash: ls-: command not found
[root@ip-172-31-24-165 classprojects]# ls -rlt
total 0
drwxr-xr-x 8 root root 139 Feb 19 13:52 staticwebsite
drwxr-xr-x 8 root root 159 Feb 19 13:58 devstaticrepo
drwxr-xr-x 3 root root  18 Feb 19 14:00 existdirrepo
drwxr-xr-x 3 root root  35 Feb 19 14:35 creatdirgitrepo
drwxr-xr-x 8 root root 139 Feb 19 14:54 staticclassrepo
drwxr-xr-x 3 root root  93 Feb 21 15:06 mysimple-orgrepo
[root@ip-172-31-24-165 classprojects]# git clone https://github.com/knowledgeshare99/mysimple-orgrepo.git knowledgeuser-repoorg
Cloning into 'knowledgeuser-repoorg'...
remote: Enumerating objects: 15, done.
remote: Counting objects: 100% (15/15), done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 15 (delta 2), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (15/15), done.
[root@ip-172-31-24-165 classprojects]# ls -lrt
total 0
drwxr-xr-x 8 root root 139 Feb 19 13:52 staticwebsite
drwxr-xr-x 8 root root 159 Feb 19 13:58 devstaticrepo
drwxr-xr-x 3 root root  18 Feb 19 14:00 existdirrepo
drwxr-xr-x 3 root root  35 Feb 19 14:35 creatdirgitrepo
drwxr-xr-x 8 root root 139 Feb 19 14:54 staticclassrepo
drwxr-xr-x 3 root root  93 Feb 21 15:06 mysimple-orgrepo
drwxr-xr-x 3 root root  93 Feb 21 15:13 knowledgeuser-repoorg
[root@ip-172-31-24-165 classprojects]# cd knowledgeuser-repoorg
[root@ip-172-31-24-165 knowledgeuser-repoorg]# ls -rlta
total 16
drwxr-xr-x 9 root root 167 Feb 21 15:13 ..
-rw-r--r-- 1 root root  26 Feb 21 15:13 merging-dupl.txt
-rw-r--r-- 1 root root  42 Feb 21 15:13 file2.txt
-rw-r--r-- 1 root root  31 Feb 21 15:13 file1.txt
-rw-r--r-- 1 root root  66 Feb 21 15:13 README.md
drwxr-xr-x 8 root root 163 Feb 21 15:13 .git
drwxr-xr-x 3 root root  93 Feb 21 15:13 .
[root@ip-172-31-24-165 knowledgeuser-repoorg]# cat .git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = https://github.com/knowledgeshare99/mysimple-orgrepo.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[root@ip-172-31-24-165 knowledgeuser-repoorg]# ls -rlt
total 16
-rw-r--r-- 1 root root 26 Feb 21 15:13 merging-dupl.txt
-rw-r--r-- 1 root root 42 Feb 21 15:13 file2.txt
-rw-r--r-- 1 root root 31 Feb 21 15:13 file1.txt
-rw-r--r-- 1 root root 66 Feb 21 15:13 README.md
[root@ip-172-31-24-165 knowledgeuser-repoorg]# vi file3-ks.txt
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	file3-ks.txt

nothing added to commit but untracked files present (use "git add" to track)
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git add file3-ks.txt
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   file3-ks.txt

[root@ip-172-31-24-165 knowledgeuser-repoorg]# git commit -m "testing local ks-repo to local remote repo of ks
> ^C
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git commit -m "testing local ks-repo to local remote repo of ks"
[master 94f4f72] testing local ks-repo to local remote repo of ks
 1 file changed, 1 insertion(+)
 create mode 100644 file3-ks.txt
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git branch
* master
[root@ip-172-31-24-165 knowledgeuser-repoorg]# git push origin master
Username for 'https://github.com': knowledgeshare99
Password for 'https://knowledgeshare99@github.com':
Counting objects: 3, done.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 346 bytes | 346.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/knowledgeshare99/mysimple-orgrepo.git
   92f0d53..94f4f72  master -> master

----------------- Using UserID of remote Github to clone the remote organization of Repo ---------

Syntax : # git clone https://<userid-of-github>@github.com/<ORG-Name>/<Your-Github-repo>.git <Custom-local-repo-creating>

Ex:
[root@ip-172-31-24-165 classprojects]# git clone https://knowledgeshare99@github.com/classv5-organi/mysimple-orgrepo.git mysimple-orgrepo2
Cloning into 'mysimple-orgrepo2'...
remote: Enumerating objects: 28, done.
remote: Counting objects: 100% (28/28), done.
remote: Compressing objects: 100% (21/21), done.
remote: Total 28 (delta 7), reused 6 (delta 1), pack-reused 0
Unpacking objects: 100% (28/28), done.
[root@ip-172-31-24-165 classprojects]# ls -rlt

then later as usual how to do for git repository (add,commit,pull and push)
==================================================================================================
                       6) Configuration Management Tool :Ansible and Chef,Puppet
===================================================================================================
a)Ansible:
• Ansible structure
• Installation and configuration
• Inventory hosts
• Ansible configuration SSH agent -Remote
• Ansible modules
• Roles
o README.md
o Files
o Template
o Handlers
o meta
o Tasks
o Default
o Var
• Playbooks
• Ansible Vault
• Ansible Doc
• Ansible Tower overview
• Ansible YMAL scrips

=========================================================================================================
                                           Ansible
=========================================================================================================

------------ installation and configuration ansible ----------------------
How to install ansible in RHEL?

http://epel.mirror.net.in/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm

https://muchbits.com/ansible-installation-1-1.html

https://linuxconfig.org/ansible-installation-on-centos-7-linux

Through Source code installation : success

https://linuxconfig.org/ansible-installation-on-centos-7-linux

https://simplyopensource.blogspot.in/2015/08/how-to-install-and-configure-ansible.html

For any issues during the above source installation :
https://www.liquidweb.com/kb/enable-epel-repository/

ex: If its AWS amazon linux Machine then execure directly in EC2

1)#sudo amazon-linux-extras install ansible2

after install then please check ansible is installed or not :
2)
[root@ip-10-0-1-162 ec2-user]# ansible --version
ansible 2.4.6.0
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /bin/ansible
  python version = 2.7.14 (default, Jun 19 2018, 17:14:23) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]
[root@ip-10-0-1-162 ec2-user]#

3)Ansible Directory path in linux :
[root@ip-10-0-1-162 ec2-user]# cd /etc/ansible/
[root@ip-10-0-1-162 ansible]# pwd
/etc/ansible
[root@ip-10-0-1-162 ansible]# ls -rlt
total 24
drwxr-xr-x 2 root root     6 Sep  5 22:07 roles
-rw-r--r-- 1 root root  1016 Sep  5 22:07 hosts
-rw-r--r-- 1 root root 19155 Sep  5 22:07 ansible.cfg
[root@ip-10-0-1-162 ansible]# pwd

4)If you want to connect slavenode instead of "ssh port 22" to "ssh = 222 then you have to modify in ansible.cfg then need to open any port from firewall that you have to add permanently in system
ex:
# firewall-cmd --permanent --add-port=2222/tcp
# firewall-cmd --reload // to flush the firewall
then need to restart sshd service
# service sshd restart
# ssh 0 -p 2222
after changes then try to ping from ansible control server

#ansible all -m ping


---------------- Best method: Installation Ansible by creating a ansible repo ---------------------------------
2)How to install ansible by creating a ansible repo ?

https://linuxacademy.com/community/posts/show/topic/21702-ansible-package-no-available
Incase if you get "No package available ansible then follow the steps :
1. Create a new file called 'ansible.repo' in /etc/yum.repos.d
2. Copy the following content into it:

[Ansible]
name = ansible
baseurl = https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/
enabled = 1
gpgcheck = 0
3. Run 'yum update'
4. Install ansible ('sudo yum install ansible')



2)Follow the instructions to change the file permissions for ansible dir path:

Ex:To see the userid expiry date:
[root@ip-10-0-0-73 ansible]# chage -l ansadm

------------------- after ansible installation checks ---------------------------------
#rpm -qa | grep ansible
Or
#yum list anible

#rpm -ql | grep ansiblepacakge  | more

—1-ansible control server
(2 & 3 are ansible client)
— 2-appserver
—3-deserver
—ansible-doc
—ansible-galaxy
—amiable-playbook
—ansible-pull
—ansible-vault
—python libraries —to manage ansible ,laws modules, docker,auzre,jenkins

----------------- create a user and add user: ansadm into /etc/sudoers list in all remote slave nodes ---------------------
1)User creation
#useradd -d /home/ansadm -m ansadm
#passwd ansadm

2)user "asnadm" setting non-expiry
#passwd -x -1 ansadm —its because of non expiry


3)add my user into suoders list
vi /etc/sudoers

In last line you have to add the below "ansadm" user details in Sudoers file
ec2-user	ALL=(ALL)	NOPASSWD: ALL
ansadm        ALL=(ALL)       NOPASSWD: ALL


4)
Before changes:
$cd /opt/ansible or /etc/anisble
$ls -lrt
drwxr-xr-x.  4 root root  139 Aug 19 09:20 ansible

after change permissions: to user and group
[ansadm@ip-172-31-25-63 opt]$ sudo chown -R ansadm.ansadm ansible
[ansadm@ip-172-31-25-63 opt]$ pwd
/opt
[ansadm@ip-172-31-25-63 opt]$ ls -rlt
total 2
drwxr-xr-x.  4 ansadm ansadm  139 Aug 19 09:20 ansible
[ansadm@ip-172-31-25-63 opt]$

[ansadm@ip-172-31-25-63 opt]$ sudo chmod -R 755 ansible



5)In case if you want to use with same user "ansadm" in all remote server then please same user into all .or else you can use with other user also
Follow the same steps on app server and dbserver
#useradd -d /home/ansadm -m ansadm
#passwd ansadm
#passwd -x -1 ansadm —its because of non expiry

===================================== How to generate ssh-key gen in ansible control and copy id_rsa.pub key of ansible control(master) into all remote slave =====================================
4)How to generate ssh-key gen ?
https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/

Ex:
Syntax:
#ssh-keygen -t rsa -b 4096 -C "your_email@example.com" -f $HOME/.ssh/id_rsa

Example:
ssh-keygen -t rsa -b 4096 -C “knowledgeshare99@gmail.com”

Login to slave node then do perform the below steps:
#useradd -d /home/ansadm -m ansadm
#passwd ansadm
#vi /etc/sudoers
ansadm        ALL=(ALL)       NOPASSWD: ALL

save and exit
#su ansadm
$ssh-keygen
enter --enter --enter

$cd /home/ansadm
#cd .ssh
#vi authorized_keys
please copy the masteransible publickey and paste into above file

save and exit
$pwd
/home/ansadm/.ssh
$chmod 400 authorized_keys


Login to ansible master server and keeep it ready open "id_rsa.pub" file
#cat /home/asnadm/.ssh/id_pub
Copy and paste this in two slave nodes
—in app serve client under ansadm(home/ansadm/.ssh/authorized_keys) user home

Again Login to slave nodes(remote)
#vi /home/ansadm/.ssh/authorized_keys
paste control server pub key(id_rsa.pub) on both clients
#chown -R ansadm:amsadm /home/ansadm/
#chow 700 .ssh
#chmod 600 authorized_keys
or
#chmod 400 authorized_keys



Note: Please create a userid(slave with sudo permissions) either with same userid(ansadm) or else different(tomcat)
and also create a .ssh folder inside /home/ansadm and make the permissions "700" and inside .ssh folder ,create a file "authorized_keys" and just past the master id_rsa.pub.
[Or else please foloow the jenkins master and slave node :passwordless authentication]

—-->try SSH login from controls server from "ansadm" user home
Ex:Try to login from master ansible to slave node:
Anisble Master IP : 10-0-1-48
Slave node IP :10.0.2.151
[ansible@ip-10-0-1-48 .ssh]$ ssh 10.0.2.151
Ex:
[ansadm@ip-10-0-1-48 .ssh]$ ssh ansadm@10.0.2.151

===================================== Ansible structure =====================================
http://docs.ansible.com/ansible/latest/intro_inventory.html

1)hosts
2)inventory
3)playbooks
4)roles

#chown -R ansadm:ansadm /etc/ansadm —since its in root owner as initial installed

-inventory list
— hosts
— roles
— playbook
— ansible.cfg
— ansible examples using moduals runs on remotes nodes by control server sensible


===================================== Ansible Inventory =====================================

Basic introduction about modules ?
http://docs.ansible.com/ansible/latest/modules_intro.html#

A)
Just go to master then add slave ip inside "hosts"
#su ansadm
$cd /etc/ansible
$cp hosts hosts-ORG
Before adding any slave ip "hosts" file must be empty. then add slave ip
$vi /etc/ansible/hosts



B)
To list the hostnames from group hosts variables:
ex: inside
cat /ets/ansible/hosts
[centos]
centos1
centos2
centos3
[ubuntu]
ubuntu1
ubuntu2
ubuntu3

Other example to call as a "sudo" to become as "root"
cat /ets/ansible/hosts
[centos]
centos1 ansible_user=root
centos2 ansible_user=root
centos3 ansible_user=root
[ubuntu]
ubuntu1 ansible_become=true ansible_become_pass=password
ubuntu2 ansible_become=true ansible_become_pass=password
ubuntu3 ansible_become=true ansible_become_pass=password

Other example to call as a "sudo" to become "root" user then if you trying to call with different ssh port= 2222(instead of "22" port)
cat /ets/ansible/hosts
[centos]
centos1 ansible_user=root ansible_port=2222
centos2 ansible_user=root
centos3 ansible_user=root
[ubuntu]
ubuntu1 ansible_become=true ansible_become_pass=password
ubuntu2 ansible_become=true ansible_become_pass=password
ubuntu3 ansible_become=true ansible_become_pass=password

One more example if you want to call inventory hosts with "supplier ranges from centos1 to host4"
cat /ets/ansible/hosts
[centos]
centos1 ansible_user=root ansible_port=2222
centos[2:3] ansible_user=root
[ubuntu]
ubuntu[1:3] ansible_become=true ansible_become_pass=password

after list the hosts
#ansible all ---list-hosts

-->One more example to mitigate the variable inside hosts to call suppliers host slavenodes:
cat /ets/ansible/hosts
[controlserver]
localhost ansible_connection=local

[centos]
centos1 ansible_port=2222
centos[2:3]

[centos:vars]
ansible_user=root

[ubuntu]
ubuntu[1:3]

[ubuntu:vars]
ansible_become=true
ansible_become_pass=password

-->One more to children declartions variable inside hosts to call suppliers host slavenodes:
(Linux is the parent then childers are centos and ubuntu hosts here both childres are group of linux )
cat /ets/ansible/hosts
[controlserver]
localhost ansible_connection=local

[centos]
centos1 ansible_port=2222
centos[2:3]

[centos:vars]
ansible_user=root

[ubuntu]
ubuntu[1:3]

[ubuntu:vars]
ansible_become=true
ansible_become_pass=password

[linux:children]
centos
ubuntu

To list the above parent linux group for displaying the children hosts :
#ansible linux -m ping -o

--> one more to call varibale port from linux group parent to slave node childer
cat /etc/ansible/hosts

[linux:children]
centos
ubuntu

[linux:vars]
ansible_port=1234


Note: the above Most important stuff can be found in the below gihub link :
https://github.com/knowledgeshare99/masteringansible

1)Listing from centos group hosts
#ansible centos --list-hosts

2)listing hosts from the hosname having with *.3
#ansible *.3 --list-hosts
hosts(2)
  centos3
  ubuntu3

TO list out that how many modules available ?
#ansible-doc -l | more
This will list out all the modules
—module name
—module description
##ansible-doc -l | wc -l
569
latese ex:
[ansadm@ip-10-0-1-162 ansible]$ ansible-doc -l | wc -l
1378

--------- ansible.cfg ------
Even you call the inventory hosts either in YAML language or JSON "/etc/ansible/hosts.yml or hosts.json"
cat /etc/ansible/ansible.cfg
[defaults]
inventory=hosts.yml or hosts.json
host_key_checking=False

Then how to ping those inventory hosts if its in YAML or JSON langauge :
#ansible all -i hosts.yml -m ping -o
or in json
#ansible all -i hosts.json -m ping -o

--------- --extra-vars or -e to set extra variable using ansible commnad line eventhough you specify different variable in hosts then you can still overrides calling --extra-vars
#ansible linux -m ping -e 'ansible_port=22' // Here we already specified the anisble_port=2222 inside inventory hosts but calling external variable as "overiding the variblae via command line"

===================================== Ansible modules commands =====================================

-------------------------------------- Modules --------------
How to check ansible module ?
[ansadm@ip-10-0-1-48 ansible]$ ansible-doc --all | wc -l
195900
Modules available in ansible
#ansible-doc -s yum — its like man command how helps to identifies the command pattern

Most Modules uses : ping,shell,command,files,templates,find,script,fetch,copy,service,yum,telnet,systemd,git,git_config,
Note: If the user is different in all remote machines then please pass argument to call specifically remote user like below
ex: for shell module

#ansible all -m shell -a "service httpd status" -u ec2-user -s


By using Ping module:
[ansadm@ip-10-0-1-61 ansible]$ ansible all -m ping
Ex:
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m ping
10.0.2.151 | SUCCESS => {
    "changed": false,
    "failed": false,
    "ping": "pong"
}

Ex2:
[ansadm@ip-10-0-1-61 ansible]$ ansible all -m ping -o
Here — o mean it will display the output

Ping with different remote user if ansadm public key copied to ec2-user in remote server :
[ansadm@ip-172-31-25-63 ansible]$ ansible webserver -m ping -s -u ec2-user
172.31.20.93 | SUCCESS => {
    "changed": false,
    "ping": "pong"


$ansible-playbook /etc/ansible/apache.yml -i /etc/ansible/hosts -l appserver

By using "shell" module :
[ansadm@ip-10-0-1-61 ansible]$ ansible all -m shell -a "uname -a;df -h"
by passsing -v means verbose
[ansadm@ip-10-0-1-61 ansible]$ ansible all -m shell -a "uname -a;df -h" -v
[ansadm@ip-10-0-1-162 ansible]$ ansible all -m shell -a "uname -a;df -h;ls -lrt /etc/httpd"

Here rc=0 : means return code is zero success
here v : means verbose it shows from where its picking the configuration /etc/ansible/ansible.cfg

Checking status:
#ansible all -m shell -a “ps -af | grep httpd ” -s
#ansible appgroup -m yum -a “name=httpd state=present” -s


By using service module:
#ansible appgroup -m service -a “name=httpd state=started” -s
#ansible appgroup -m service -a “name=httpd state=stopped” -s
[ansadm@ip-10-0-0-73 tmp]$ ansible all -m service -a "name=httpd state=stopped" -s
[ansadm@ip-10-0-0-73 tmp]$ ansible all -m shell -a "service httpd start" -s
or
[ansadm@ip-10-0-0-73 tmp]$ ansible all -m command -a "service httpd start" -s



By Shell module:
[ansadm@ip-10-0-0-73 tmp]$ ansible all -m shell -a "service httpd start" -s

[ansadm@ip-10-0-0-73 tmp]$ ansible all -m shell -a "df -f;free -h;ls -lrt /home/ansadm/.ssh" -s

[ansadm@ip-10-0-0-73 tmp]$ ansible all -m shell -a "sh /etc/ansible/script.sh" -s

By copy module :
[ansadm@ip-10-0-1-61 ansible]$ ansible all -m copy -a "src=/tmp/filecopy.txt dest=/tmp/filecopy.txt"
To copy a file into all hosts ?
#ansible all -m copy -a “src=/tmp/testing.txt dest=/tmp/” -s
then test the file whether its copied into all remote nodes:using shell/command
[ansadm@ip-10-0-1-48 tmp]$ ansible all -m shell -a "ls -lrt /tmp/file-ansible.txt"
or
[ansadm@ip-10-0-1-48 tmp]$ ansible all -m command -a "ls -lrt /tmp/file-ansible.txt"


ex:
[ansadm@ip-10-0-1-162 ansible]$ ansible slavenode -m copy -a "src=/tmp/file1.txt dest=/tmp" -s
[ansadm@ip-10-0-1-162 ansible]$ ansible slavenode -m command -a "ls -lrt /tmp/file1.txt"
10.0.2.151 | SUCCESS | rc=0 >>
-rw-r--r-- 1 root root 60 Dec  5 14:01 /tmp/file1.txt
[ansadm@ip-10-0-1-162 ansible]$ ansible slavenode -m shell -a "ls -lrt /tmp/file1.txt;hostname"
10.0.2.151 | SUCCESS | rc=0 >>
-rw-r--r-- 1 root root 60 Dec  5 14:01 /tmp/file1.txt
ip-10-0-2-151.us-west-2.compute.internal




Note:
Incase facing an issue by copying the file to remote host due to selinux or libselinux-python module install in all client servers
Then disable selinux in client server
#sestatus
So this is enforcing mode that is why not allowing to copy
To disable selinux :
#setenforce 0

#ansible all -m yum -a “name=libselinux-python state=present” -s
Now it should work copy command
#ansible all -m copy -a “src=/tmp/testing.txt dest=/tmp/”

what is git cherry-pick uses ?
https://git-scm.com/docs/git-cherry-pick
https://stackoverflow.com/questions/9339429/what-does-cherry-picking-a-commit-with-git-mean
As with other Git operations that introduce changes via the process of applying a diff, you may need to resolve conflicts to fully apply the changes from the given commit . The command git cherry-pick is typically used to introduce particular commits from one branch within a repository onto a different branch.

Given one or more existing commits, apply the change each one introduces, recording a new commit for each. This requires your working tree to be clean (no modifications from the HEAD commit).

By yum :
[ansadm@ip-10-0-1-61 ansible]$ ansible appserver -m yum -a 'name=httpd state=present' -s
[ansadm@ip-10-0-1-61 ansible]$ ansible appserver -m service -a "name=httpd state=started" -s
stopping:
[ansadm@ip-10-0-1-61 ansible]$ ansible appserver -m service -a "name=httpd state=stopped" -s
How to uninstall httpd packge:
[ansadm@ip-10-0-1-61 cp]$ ansible appserver -m yum -a "name=httpd state=removed" -s
How to check status of installed package either by YUM or shell or command ?
Check the package is installed on client app server

[ansadm@ip-10-0-1-61 cp]$ ansible appserver -m yum -a "name=httpd state=removed" -s
[ansadm@ip-10-0-1-61 cp]$ ansible appserver -m shell -a "rpm -qa|grep httpd" -s
[ansadm@ip-10-0-1-61 cp]$ ansible appserver -m command -a " service httpd status " -s
[ansadm@ip-10-0-1-61 cp]$ ansible appserver -m shell -a " ps -ef|grep httpd " -s

How to isntall "nc" pacage ?
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m yum -a "name=nc state=installed" -s


By using command :
[ansadm@ip-10-0-0-250 playbooks]$ ansible appserver -m command -a "ls -lrt /etc/httpd/conf/httpd.conf" -s
 [WARNING]: Found both group and host with same name: localhost

ip-10-0-2-194.ec2.internal | SUCCESS | rc=0 >>
-rw-r--r-- 1 root root 11753 Nov  9 13:46 /etc/httpd.conf
Ex2:
[ansadm@ip-10-0-0-250 playbooks]$ ansible appserver -m command -a "service httpd status" -s
 [WARNING]: Found both group and host with same name: localhost

 [WARNING]: Consider using service module rather than running service
ip-10-0-2-194.ec2.internal | SUCCESS | rc=0 >>
httpd (pid  3780) is running...


By using script module:
we can provision also using bash script
http://docs.ansible.com/ansible/latest/script_module.html
ex:
cd /tmp/logrotaion.sh
$cd /etc/ansible
#ansible slavenode -m shell -a "sh /tmp/logrotaion.sh" -s
or
#ansible slavenode -m shell -a "sudo sh /tmp/logrotaion.sh"



By using template Module:
Templates are processed by the Jinja2 templating language
http://docs.ansible.com/ansible/latest/template_module.html
https://docs.ansible.com/ansible/2.5/modules/template_module.html?highlight=templates

Ex1:
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m template -a "src=/tmp/file-ansible.txt dest=/tmp/" -s
Check the file is copied or not into slave node using command/shell modules:
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m command -a "ls -lrt /tmp/file-ansible.txt" -s
or
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m shell -a "ls -lrt /tmp/file-ansible.txt" -s


Ex2:
- template:
    src: /mytemplates/foo.j2
    dest: /etc/file.conf
    owner: bin
    group: wheel
    mode: 0644

By using Telnet :
http://docs.ansible.com/ansible/latest/telnet_module.html

By using systemd or systectl :Controls systemd services on remote hosts.
http://docs.ansible.com/ansible/latest/systemd_module.html

#ansible all -m systemd -a “name=httpd state=started” -s
ex:
[ansadm@ip-10-0-1-162 ansible]$ ansible slavenode -m systemd -a "name=httpd state=started" -s

Ex:
In playbook:
- name: Make sure a service is running
  systemd: state=started name=httpd

- name: stop service cron on debian, if running
  systemd: name=cron state=stopped



By using Command module:In playbooks
$ansible webservers -m command -a "/sbin/reboot -t now"
In playbook:
- name: reboot the servers
  action: command /sbin/reboot -t now
In Playbook if its windows script:
Ex:Please download a "cygwin/cygdrive for windows 7/10 free" and then install .after you can utilize as a "unix" terminal
  tasks:

  - name: fetch {{ shard }} primary DC

    remote_user: hudson

    command: /cygdrive/c/Python27/python.exe d:\\admin\\script\\FSO\\get-primary-dc.py -s {{ shard }}

    no_log: True

    register: shard_dc

    ignore_errors: true



By using git :git - Manage git checkouts of repositories to deploy files or software.
http://docs.ansible.com/ansible/latest/git_module.html
# Example git checkout from Ansible Playbooks

Ex1:
a)creating a directory(not required this step)
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m command -a "mkdir /tmp/repo-mystatic" -s
b)cloning repo into slave
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m git -a "repo=https://github.com/knowledgeshare99/mystaticwebsite.git dest=/tmp/repo-mystatic" -s
c)Checking whether repo is created or not
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m command -a "ls -lrt /tmp/repo-mystatic/" -s


Ex2:
- git:
    repo: 'https://foosball.example.org/path/to/repo.git'
    dest: /srv/checkout
    version: release-0.22

# Example read-write git checkout from github
- git:
    repo: ssh://git@github.com/mylogin/hello.git
    dest: /home/mylogin/hello
ex:
git clone ssh://git@github.com/mylogin/hello.git hellorepo


By using git_config:
The git_config module changes git configuration by invoking ‘git config’. This is needed if you don’t want to use template for the entire git config file (e.g. because you need to change just user.email in /etc/.git/config). Solutions involving command are cumbersone or don’t work correctly in check mode.
http://docs.ansible.com/ansible/latest/git_config_module.html

# Set some settings in ~/.gitconfig
- git_config:
    name: alias.ci
    scope: global
    value: commit

- git_config:
    name: alias.st
    scope: global
    value: status


By using fetch:
This module works like copy, but in reverse. It is used for fetching files from remote machines and storing them locally in a file tree, organized by hostname.
This module is also supported for Windows targets.
http://docs.ansible.com/ansible/latest/fetch_module.html

Ex1:
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m fetch -a "src=/tmp/slave2-remote-local.txt dest=/tmp/" -s

Ex2:# Store file into /tmp/fetched/host.example.com/tmp/somefile

[ansadm@ip-10-0-1-48 ansible]$ ansible all -m fetch -a "src=/tmp/somefile dest=/tmp/fetched" -s

Inventory hosts: $cat hosts
10.0.0.1
121.34.3.34

Output for above two hosts fetching files from the above fetch command module :
In master :
ls -lrt /tmp/fetched/10.0.0.1/tmp/somefile
ls -lrt /tmp/fetched/121.34.3.34/tmp/somefile
To check the fecthing output from module:
a)
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m command -a "ls -lrt /tmp/fetched/10.0.0.1/tmp/somefile" -s
b)
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m command -a "ls -lrt /tmp/fetched/121.34.3.34/tmp/somefile -s


Ex3:Using playbooks
# Store file into /tmp/fetched/host.example.com/tmp/somefile
- fetch:
    src: /tmp/somefile
    dest: /tmp/fetched


Ex:
I am copying the file1.txt file from local machine(hostname1) connecting into remote
I logged into hostname2
#scp ec2-user@hostname1:/tmp/file1.txt /tmp/


By using find :
Return a list of files based on specific criteria. Multiple criteria are AND’d together.
For Windows targets, use the win_find module instead.
http://docs.ansible.com/ansible/latest/find_module.html
Ex1:
[ansadm@ip-10-0-1-48 ansible]$ ansible all -m find -a "paths=/tmp age=2d" -s

Ex2:In playbookd/Role
- name: Recursively find /tmp files older than 2 days
  find:
    paths: /tmp
    age: 2d
    recurse: yes


By using file :
Sets attributes of files, symlinks, and directories, or removes files/symlinks/directories. Many other modules support the same options as the file module - including copy, template, and assemble.
For Windows targets, use the win_file module instead.
http://docs.ansible.com/ansible/latest/file_module.html
https://docs.ansible.com/ansible/2.5/modules/file_module.html
# change file ownership, group and mode. When specifying mode using octal numbers, first digit should always be 0.
- file:
    path: /etc/foo.conf
    owner: foo
    group: foo
    mode: 0644
- file:
    src: /file/to/link/to
    dest: /path/to/symlink
    owner: foo
    group: foo
    state: link


By using Script module:Runs a local script on a remote node after transferring it
# Example from Ansible Playbooks
- script: /some/local/script.sh --some-arguments 1234
https://www.packtpub.com/mapt/book/networking_and_servers/9781783280810/5/ch05lvl1sec38/writing-a-module-in-bash
# Run a script that creates a file, but only if the file is not yet created
- script: /some/local/create_file.sh --some-arguments 1234
  args:
    creates: /the/created/file.txt
#in Playbook in tasks :
 tasks:

    - name: Get execution DB

      script: /etc/ansible/scripts/getDbAdmin.py

      register: whichDbAdmin

Most import:
yum,copy,shell,command,service,file,template,ping,git,script

======================================== Ansible YAML ========================================
About YAML ?
http://docs.ansible.com/ansible/latest/YAMLSyntax.html
YAML (YAML Ain't Markup Language) is a human-readable data serialization language. It is commonly used for configuration files, but could be used in many applications where data is being stored (e.g. debugging output) or transmitted (e.g. document headers).
YAML was said to mean Yet Another Markup Language,[10] referencing its purpose as a markup language with the yet another construct, but it was then repurposed as YAML Ain't Markup Language

https://learn.getgrav.org/advanced/yaml

ex: what is extension for yaml language :
fruits.yml
fruits.py
fruits.rb
fruits.html
fruits.xml
In json :

Ex:fruits.json
{
"fruits":
      {
      "fruits-colors":[

      {"black-fruits": ["blackgrapes","jackfrutis","tomarind"] },

      { "green-fruits": ["apple","grapes","pineapple","pears"]}

      {"red-fruits": ["apple","pomgr","strauberry","litchi"] }

      ]
}

}


Its like "key" and "value"
ex2:
{
"students":
   { "groups":
     [
     {"name":"Hari","age":24,"subject":"maths","score": 70},
     {"name":"Sumon","age":36,"subject":"physics","score": 80},
     {"name":"Prakash","age":35,"subject":"maths","score": 90}
     ]
   }
}

array list ex:

["KS" 20,3 445, 44]


How to validate JSON language through onlne after implemening json script :
https://jsonlint.com/

Converting from JSON to YAML :
https://www.json2yaml.com/

Converting from YAML to JSON :
https://codebeautify.org/yaml-to-json-xml-csv
After converting YAML :
---
fruits:
  fruits-colors:
  - black-fruits:
    - grapes
    - jackfrutis
    - balckfrutis
  - green-fruits:
    - apple
    - grapes
    - pineapple
  - red-fruits:
    - apple
    - pomgr
    - strauberry

key --> name
values---> names list in "[]"(squar bracket)
"name": ["ram","laxmi","satish"]

For more learing :
https://www.programiz.com/python-programming/

Difference tuples,list,dictionary :
A list can store a sequence of objects in a certain order such that you can index into the list, or iterate over the list. List is a mutable type meaning that lists can be modified after they have been created.

A tuple is similar to a list except it is immutable. There is also a semantic difference between a list and a tuple. To quote Nikow's answer:

Tuples have structure, lists have order.

A dictionary is a key-value store. It is not ordered and it requires that the keys are hashable. It is fast for lookups by key.

======================================== Ansible Playbook ========================================

Def: ansible playbook is a way to send commands to remote computers in a scripted way.At a basic level ,playbook can be used to manage configuration of and deployments to remote hosts .At a more advanced level ,they can sequence multi-tier rollouts involving rolling updates , and can delagates actions to other hosts ,interacting with monitoring servers and load balancers along the way .
Playbooks are designed to be human-readable and are developed in a basic text language ,are written in YAML data serialization format .

And more about it ?
Each playbook is composed of one or more ‘plays’ in a list.
The goal of a play is to map a group of hosts to some well defined roles, represented by things ansible calls tasks. At a basic level, a task is nothing more than a call to an ansible module (see Working With Modules).
By composing a playbook of multiple ‘plays’, it is possible to orchestrate multi-machine deployments, running certain steps on all machines in the webservers group, then certain steps on the database server group, then more commands back on the webservers group, etc.

Things to remember:
Become: yes — means this user can become root in client servers
become_method: sudo — means either you can pass su or sudo what you want method to pass
enabed=true mean like similar way to checkconfig(chkconfig) on client nodes

------------About Playbook :--------------------
https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html

Ex: Sample playbook:
Ex1:
[ansadm@ip-10-0-1-48 ansible]$ vi yum-install-1.yml
---
- hosts: webserver
  tasks:
    - name: Installing Httpd
      yum: name=httpd state=latest

- hosts: localhost
  tasks:
    - name: Installing Httpd
      yum: name=httpd state=latest

Ex2:
[ansadm@ip-10-0-1-48 ansible]$ vi yum-install-2.yml
---
- hosts: all
  tasks:
    - name: Installing Httpd
      yum: name=httpd state=latest



How to check if my playbook implementation correct or not  ?
(or) how to do dryrun for playbook ?
Syntax:
$ansible-playbook <playbook-name.yml> --check
$ansible-playbook apache.yml --check

To check the playbook for syntax errors
$ ansible-playbook <playbook.yml> --syntax-check

To view hosts list from playbooks
Syntax:
$ ansible-playbook <playbook.yml> --list-hosts

Ex:
[ansadm@ip-10-0-1-48 ansible]$ cat hosts
[localhostgroup]
localhost
10.0.1.48
[webserver]
10.0.2.151
10.0.1.48
[dbgroup]
54.214.223.23
#10.0.1.162
[ansadm@ip-10-0-1-48 ansible]$

Exeute for listing hosts:
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook yum-install-1.yml --list-hosts

playbook: yum-install.yml

  play #1 (webserver): webserver	TAGS: []
    pattern: [u'webserver']
    hosts (2):
      10.0.1.48
      10.0.2.151

  play #2 (localhost): localhost	TAGS: []
    pattern: [u'localhost']
    hosts (1):
      localhost


To run Playbook on limited hosts from hosts
#ansible-playbook apache-1.yml -i /etc/ansible/hosts -l webserver
L- limiting
I- inventory hosts calling

Unreachable : means which tells you how many servers are not reachable to remote nodes when you run playbook
ex1:
[ansadm@ip-10-0-1-162 ansible]$ ansible-playbook -i /etc/ansible/hosts apache-httpd-local-remote.yml

Ex2:
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook yum-install-2.yml -i hosts -l webserver

-------------create a simple playbook and run ?--------------
https://www.softwaretestinghelp.com/ansible-playbooks-ansible-vaults/
https://developers.redhat.com/blog/2016/09/02/how-to-install-and-configure-ansible-on-rhel/
https://cloudacademy.com/blog/building-ansible-playbooks-step-by-step/
https://www.digitalocean.com/community/tutorials/how-to-create-ansible-playbooks-to-automate-system-configuration-on-ubuntu

Ex1:
a)Implementing a plybook?
[ansadm@ip-10-0-1-48 ansible]$ vi copy-slave.yml
---
- hosts: webserver
  become: yes
  become_method: sudo
  tasks:
    - name: Copying a file.txt from master to slave
      copy: src=/tmp/file1-slave3.txt dest=/tmp/

Check the file is copied into slave or not?

b)Executing a plyabook :
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook copy-slave.yml

c) checking the file ?
[ansadm@ip-10-0-1-48 ansible]$ ansible webserver -m command -a "ls -lrt /tmp/file1-slave3.txt"
10.0.2.151 | SUCCESS | rc=0 >>
-rw-r--r-- 1 root root 23 Mar 15 14:43 /tmp/file1-slave3.txt


Ex2:
a) execution playbook with different user "ansible"?
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook copy-slave.yml -u ansible

Note: if its executed/isntalled the output should give all "green" "green" .In case its fresh installation then it comes into light "yellow color"

--------------How to run playbook and create step by step :---------------
http://docs.ansible.com/ansible/latest/playbooks_intro.html
https://www.softwaretestinghelp.com/ansible-playbooks-ansible-vaults/

Ex1:
$ansible-playbook apache.yml -i /etc/ansible/hosts -l appgroup

Ex2:
$ansible-playbook -i hosts -l production webservers.yml

Ex3:With different user to run on remote slave :

[ansadm@ip-10-0-0-250 ansible]$ ansible-playbook httpd.yml -s -i /etc/ansible/hosts -l localhost -u tomcat

Ex4:Executiont with inventory hosts, limiting groups ,then sudo and specific userid :

[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook -i hosts -l webserver copy-slave.yml -u ansible -s

Ex5:Executiont with inventory hosts,limiting groups ,playbooks from differen dir(path),then sudo and specific userid :

[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook -i hosts -l webserver /tmp/copy-slave.yml -u ansible -s

Ex6:Executiont with inventory hosts of different path,limiting groups ,playbooks from differen dir(path),then sudo and specific userid :

[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook -i /tmp/hosts -l webserver /tmp/copy-slave.yml -u ansible -s

------------------------------------------------
https://developers.redhat.com/blog/2016/09/02/how-to-install-and-configure-ansible-on-rhel/

[ansadm@ip-10-0-0-250 ansible]$ ansible-playbook httpd.yml
ex:

- hosts: localhost
#  user: ansadm
#  become: yes
#  become_method: sudo


  tasks:
       - name: intall httpd
         yum: name=httpd state=latest
       - name: start httpd
         service: name=httpd state=started
...

ex2:
If you're not into path /etc/ansible/httpd.yml then u have to choose the exact path of playbook where you are placing(using) all playbooks path ( to check playbook validation)

How to check playbooks in dry run ?
Syntax:
$ansible-playbook <playbook-name.yml> --check
Ex:
[ansadm@ip-10-0-1-162 etc]$ ansible-playbook /etc/ansible/httpd.yml --check

How to run playbooks using "sudo" permissions ?
[ansadm@ip-10-0-1-162 srv]$ ansible-playbook /etc/ansible/httpd-all.yml -s

------------ become and become_method ,become_user,remote_user,gather_facts ---------
https://docs.ansible.com/ansible/2.4/become.html
https://docs.ansible.com/ansible/latest/user_guide/become.html

Difference :
https://stackoverflow.com/questions/38290143/difference-between-become-and-become-user-in-ansible

gather_facts:
When using gather_facts: yes all it does is runs the setup module, so you can can just run the setup module by itself and add a when conditional so it only runs on a subset of your hosts.

Yes, that's possible, but not in the default behavior of gathering facts. Having set gather_facts to true simply calls the setup module as very first task of the play. This way you do not have any way to parameterize the setup module call.

For more details
https://github.com/ansible/ansible/issues/27875
https://stackoverflow.com/questions/34485286/ansible-gathering-facts-with-filter-inside-a-playbook
How to disable gather_facts for subplays ?
https://stackoverflow.com/questions/38308871/how-to-disable-gathering-facts-for-subplays-not-included-within-given-tag

--------- How to automate the application using playbook -------------------------
https://cloudacademy.com/blog/building-ansible-playbooks-step-by-step/

---------------------How to call multiple playbooks using in single master playbook ? -----------------------
https://serverfault.com/questions/750856/how-to-run-multiple-playbooks-in-order-with-ansible
created two sub-playbooks files :
-rw-rw-r--. 1 ansadm ansadm   229 Nov  8 14:42 httpd.yml
-rw-rw-r--. 1 ansadm ansadm   121 Nov  9 14:07 status.yml
-rw-rw-r-- 1 ansadm ansadm    89 Mar 15 14:17 sample-httpd.yml
-rw-rw-r-- 1 ansadm ansadm    90 Mar 15 14:32 yum-install.yml
-rw-rw-r-- 1 ansadm ansadm   169 Mar 15 14:42 copy-slave.yml
-rw-rw-r-- 1 ansadm ansadm    57 Mar 15 15:01 master-play.yml
To run the master-playbook ?
a)
vi master-play.yml
---
- include: copy-slave.yml
- include: yum-install.yml

(or) using import_playbook
---
- import_playbook: copy-slave.yml
- import_playbook: yum-install.yml
- import_playbook: httpd.yml

b)
How to run multiple sub-playbooks from master playbooks?
$ansible-playbok master-playbook.yml

c)You have to check the status of intallation and copied file using "ansible" module of "command/shell"

----------- With specific user playbook installation -----------
[ansadm@ip-172-31-25-63 ansible]$ ls -lrt
total 48
drwxr-xr-x. 2 ansadm ansadm    88 Aug 19 09:14 scripts
drwxr-xr-x. 2 ansadm ansadm    23 Aug 19 09:14 playbooks
lrwxrwxrwx. 1 ansadm ansadm    10 Aug 19 09:14 hosts.yml -> hosts.yaml
-rwxr-xr-x. 1 ansadm ansadm  1515 Aug 19 09:14 hosts.yaml
-rwxr-xr-x. 1 ansadm ansadm  1015 Aug 19 09:14 DOCUMENTATION.yml
-rwxr-xr-x. 1 ansadm ansadm  1016 Aug 19 09:30 hosts-ORG
-rwxr-xr-x. 1 ansadm ansadm 18102 Aug 19 09:32 ansible.cfg
-rw-rw-r--. 1 ansadm ansadm   145 Aug 19 10:04 1
-rwxr-xr-x. 1 ansadm ansadm   159 Aug 19 10:10 hosts
drwxrwxr-x. 5 ansadm ansadm   168 Aug 19 10:19 aws_ansible_cfn
drwxrwxr-x. 6 ansadm ansadm   107 Aug 19 10:20 roles
-rw-rw-r--. 1 ansadm ansadm   112 Aug 19 10:22 tomcat_app.yml
-rw-rw-r--. 1 ansadm ansadm    13 Aug 19 10:24 tomcat_app.retry
[ansadm@ip-172-31-25-63 ansible]$ ansible-playbook tomcat_app.yml -s -u ec2-user

------------------How to run multiple roles using playbook ?--------------------------------
Creating a role for httpd_class by dividing a playbook structrure :
http://redhatgov.io/workshops/ansible_tower/exercise1.5/
1)Initiate a role structrue empty using ansible-galaxy init
$ansible-galaxy init httpd_class
2)divide/cut each tasks/handlers/vars/default/templates/files from playbook and put it in each folder of Role :httpd_class as per the above url
3)then creat a playbook for role :httpd_class for execution
[ansadm@ip-10-0-0-250 playbooks]$ vi roles_httpd_class.yml
4)then execute the role-httpd_class from ansible-playbook command
[ansadm@ip-10-0-0-250 playbooks]$ ansible-playbook roles_httpd_class.yml
5)To see the multiple roles using playbook ?
$cat roles_httpd_class.yml
---#webserver-tomcat-app all roles calling
  - hosts: all
    become: yes

    roles:
       - apache
       - tomcat
       - webapps
       - database-sql

--------------- Playbook loops,nested loops -------------
https://docs.ansible.com/ansible/2.4/playbooks_loops.html


a)Creating a plyabook creat-user-01.yml
Ex:
---
  - hosts: all
    become: yes
    become_method: sudo
    remote_user: ansible
    tasks:
      - name: add several users
        user:
          name: "{{ item }}"
          state: present
          groups: "classgroup"
        with_items:
          - shiva
          - surya
          - kiran


b)Check in dry run
[ansadm@ip-10-0-1-48 .ssh]$ ansible-playbook /etc/ansible/creat-user.yml --check

c) Execution playbook from any path under "ansadm" user
[ansadm@ip-10-0-1-48 tmp]$ ansible-playbook /etc/ansible/creat-user.yml -i /etc/ansible/hosts -l webserver

d)Checking users are created or not ?
[ansadm@ip-10-0-1-48 tmp]$ ansible webserver -m command -a "id shiva" -s
[ansadm@ip-10-0-1-48 tmp]$ ansible webserver -m command -a "id surya" -s


------------ Inventory hosts patterns : ----------
https://docs.ansible.com/ansible/latest/user_guide/intro_patterns.html

Please do practice for all inventory hosts examples as above said at topic "Ansible Inventory"

---------- lineinfile module : -----------
lineinfile is used to add additional or append lines to existing files.
This module ensures a particular line is in a file, or replace an existing line using a back-referenced regular expression.
This is primarily useful when you want to change a single line in a file only. See the replace module if you want to change multiple,
similar lines or check blockinfile if you want to insert/update/remove a block of lines in a file. For other cases, see the copy or template modules.

https://docs.ansible.com/ansible/2.5/modules/lineinfile_module.html

Ex:
# Before 2.3, option 'dest', 'destfile' or 'name' was used instead of 'path'
- lineinfile:
    path: /etc/class/sample.txt
    regexp: '^shiva'
    line: 'shiva surya'

----------- limiting the hosts wise on playbooks ------------------------------

What about just the first 10, and then the next 10?:
#ansible-playbook -i hosts webservers.yml --limit boston[1:10]
#ansible-playbook -i hosts webservers.yml --limit boston[11:20]

-------- more examples of playbook -------
https://www.softwaretestinghelp.com/ansible-playbooks-ansible-vaults/

---------------some more examples of simple playbooks ------------
https://github.com/ansible/test-playbooks

https://github.com/ansible/ansible-examples

--------------- ansible-vault -----------------
Best examples for vault :
https://www.softwaretestinghelp.com/ansible-playbooks-ansible-vaults/


Exercise Lab:
https://docs.ansible.com/ansible/latest/user_guide/playbooks_vault.html
https://docs.ansible.com/ansible/latest/cli/ansible-vault.html#synopsis

Syntax: To use for valut
$ansible-vault [create|decrypt|edit|encrypt|encrypt_string|rekey|view] [options] [vaultfile.yml]

Ex1:First create a playbook with ansible-valut
a)Create a plabook using directly with ansible-vault
[ansadm@ip-10-0-1-48 ansible]$ ansible-valut create valut-ec2test.yml

b)Set the password to list in .vault-pass.txt file path ex /home/ansadm/.vault_pass.txt file
$cat ~/.vault_pass.txt
<password1>
<password2>

c)Dry-run to check for vault playbook using either --ask-passwd (or) --vault-password-file :

[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook valut-ec2test.yml --vault-password-file ~/.vault_pass.txt --check

(or)
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook valut-ec2test.yml --check --ask-passwd

d)Execution of playbooks for vault playbook :
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook valut-ec2test.yml --vault-password-file ~/.vault_pass.txt

e)To decrypt for encrypted playbook
[ansadm@ip-10-0-1-48 ansible]$ ansible-vault decrypt copy-data-emp.yml
Vault password:
Decryption successful

f)To view the playbook content which is encrypted
[ansadm@ip-10-0-1-48 ansible]$ ansible-vault view copy-data-emp.yml
Vault password:

g)To edit the playbook if its already encypted?
[ansadm@ip-10-0-1-48 ansible]$ ansible-vault edit copy-data-emp.yml
Vault password:

h)To change the password if its already set for playbook vault ?
[ansadm@ip-10-0-1-48 ansible]$ ansible-vault rekey copy-data-emp.yml
New Vault password:
Confirm New Vault password:


Ex2:

Best practices for Ansible playbooks:
https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html

========================================= Ansible-galaxy =========================================
About ansible-galaxy and how to create a role from scratch ?
https://docs.ansible.com/ansible/2.4/galaxy.html

Ansible Galaxy refers to the Galaxy website where users can share roles, and to a command line tool for installing, creating and managing roles
Galaxy, is a free site for finding, downloading, and sharing community developed roles. Downloading roles from Galaxy is a great way to jump start your automation projects.
CLI :
How to check ansible Galaxy version ?
[ansadm@ip-10-0-1-48 ec2-user]$ ansible-galaxy --version
ansible-galaxy 2.4.6.0
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/home/ansadm/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /bin/ansible-galaxy
  python version = 2.7.14 (default, Jul 26 2018, 19:59:38) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]
[ansadm@ip-10-0-1-48 ec2-user]$


Installing A role of existing from Ansible-Galaxy UI :
Use the ansible-galaxy command to download roles from the Galaxy website
$ ansible-galaxy install username.role_name

Ex:https://galaxy.ansible.com/idealista/tomcat-role

Ex1:tomcat role
$ansible-galaxy install idealista.tomcat-role
- downloading role 'tomcat-role', owned by idealista
- downloading role from https://github.com/idealista/tomcat-role/archive/1.8.0.tar.gz
- extracting idealista.tomcat-role to /home/ansadm/.ansible/roles/idealista.tomcat-role
- idealista.tomcat-role (1.8.0) was installed successfully

Ex2: Nginx
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy install geerlingguy.nginx
- downloading role 'nginx', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-nginx/archive/2.6.2.tar.gz
- extracting geerlingguy.nginx to /home/ansadm/.ansible/roles/geerlingguy.nginx
- geerlingguy.nginx (2.6.2) was installed successfully
[ansadm@ip-10-0-1-48 roles]$ ls -lrt
total 0
drwxrwxr-x 10 ansadm ansadm 274 Mar 18 10:51 tomcat-ks
drwxrwxr-x  2 ansadm ansadm   6 Mar 18 11:02 myrole-skel
drwxrwxr-x 10 ansadm ansadm 135 Mar 18 11:04 http-1
[ansadm@ip-10-0-1-48 roles]$ cp -r /home/ansadm/.ansible/roles/geerlingguy.nginx .
[ansadm@ip-10-0-1-48 roles]$ ls -rlt
total 0
drwxrwxr-x 10 ansadm ansadm 274 Mar 18 10:51 tomcat-ks
drwxrwxr-x  2 ansadm ansadm   6 Mar 18 11:02 myrole-skel
drwxrwxr-x 10 ansadm ansadm 135 Mar 18 11:04 http-1
drwxrwxr-x  9 ansadm ansadm 177 Mar 18 11:06 geerlingguy.nginx
[ansadm@ip-10-0-1-48 roles]$ mv geerlingguy.nginx nginx-1
[ansadm@ip-10-0-1-48 roles]$

https://docs.ansible.com/ansible/latest/reference_appendices/galaxy.html#roles-path
Note:Incase if you want to creat a role directly into specific then you need to pass the below command .
$ ansible-galaxy install --roles-path . geerlingguy.apache

Ex1:$ ansible-galaxy install --roles-path /etc/ansible/roles/ geerlingguy.apache
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy install --roles-path /etc/ansible/roles/ robertdebock.httpd --force
- changing role robertdebock.httpd from 4.0.0 to unspecified
- downloading role 'httpd', owned by robertdebock
- downloading role from https://github.com/robertdebock/ansible-role-httpd/archive/4.0.0.tar.gz
- extracting robertdebock.httpd to /home/ansadm/.ansible/roles/robertdebock.httpd
- robertdebock.httpd (4.0.0) was installed successfully
[ansadm@ip-10-0-1-48 roles]$

Ex2:
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy install --roles-path . lean_delivery.jboss
- downloading role 'jboss', owned by lean_delivery
- downloading role from https://github.com/lean-delivery/ansible-role-jboss/archive/master.tar.gz
- extracting lean_delivery.jboss to /etc/ansible/roles/lean_delivery.jboss
- lean_delivery.jboss (master) was installed successfully

Ex3: With version tags
You can install a specific version of a role from Galaxy by appending a comma and the value of a GitHub release tag. For example:
$ ansible-galaxy install --roles-path /etc/ansible/roles/ geerlingguy.apache,v1.0.0


Installing multiple roles from a file script:
https://docs.ansible.com/ansible/latest/reference_appendices/galaxy.html
Beginning with Ansible 1.8 it is possible to install multiple roles by including the roles in a requirements.yml file. The format of the file is YAML, and the file extension must be either .yml or .yaml.
$ ansible-galaxy install -r requirements.yml



Creating a Role using Ansible-Galaxy CLI:
Use the init command to initialize the base structure of a new role, saving time on creating the various directories and main.yml files a role requires

$ ansible-galaxy init role_name
Ex:
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy init http-1
- http-1 was created successfully
[ansadm@ip-10-0-1-48 roles]$ ls -rlt
total 0
drwxrwxr-x 10 ansadm ansadm 274 Mar 18 10:51 tomcat-ks
drwxrwxr-x  2 ansadm ansadm   6 Mar 18 11:02 myrole-skel
drwxrwxr-x 10 ansadm ansadm 135 Mar 18 11:04 http-1
[ansadm@ip-10-0-1-48 roles]$ cd http-1/
[ansadm@ip-10-0-1-48 http-1]$ ls -rlt
total 4
drwxrwxr-x 2 ansadm ansadm    6 Mar 18 11:04 templates
drwxrwxr-x 2 ansadm ansadm   22 Mar 18 11:04 handlers
drwxrwxr-x 2 ansadm ansadm    6 Mar 18 11:04 files
drwxrwxr-x 2 ansadm ansadm   22 Mar 18 11:04 defaults
-rw-rw-r-- 1 ansadm ansadm 1328 Mar 18 11:04 README.md
drwxrwxr-x 2 ansadm ansadm   22 Mar 18 11:04 tasks
drwxrwxr-x 2 ansadm ansadm   22 Mar 18 11:04 meta
drwxrwxr-x 2 ansadm ansadm   22 Mar 18 11:04 vars
drwxrwxr-x 2 ansadm ansadm   39 Mar 18 11:04 tests


Use the info command to view more detail about a specific role:
$ ansible-galaxy info username.role_name

Use list to show the name and version of each role installed in the roles_path.
$ ansible-galaxy list

Use remove to delete a role from roles_path:
$ ansible-galaxy remove username.role_name

Using a Custom Role Skeleton
$ ansible-galaxy init --role-skeleton=/path/to/skeleton role_name
When a skeleton is provided, init will:
	•	copy all files and directories from the skeleton to the new role
	•	any .j2 files found outside of a templates folder will be rendered as templates. The only useful variable at the moment is role_name
	•	The .git folder and any .git_keep files will not be copied

Ex:
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy init --role-skeleton=ansible-role-skeleton temp-delete
- myrole-skel was created successfully
[ansadm@ip-10-0-1-48 temp-delete]$ ls -rlta
total 0
drwxr-xr-x 9 ansadm ansadm 121 Mar 18 14:58 ..
drwxrwxr-x 2 ansadm ansadm   6 Mar 18 14:58 .


Authenticate with Galaxy:
https://docs.ansible.com/ansible/latest/reference_appendices/galaxy.html
Using the import, delete and setup commands to manage your roles on the Galaxy website requires authentication, and the login command can be used to do just that. Before you can use the login command, you must create an account on the Galaxy website.

The login command requires using your GitHub credentials. You can use your username and password, or you can create a personal access token. If you choose to create a token, grant minimal access to the token, as it is used just to verify identify.

Syntax:
[ansadm@ip-10-0-1-48 nginx-1]$ ansible-galaxy login --github-token <mytoken-personal-github>
Ex1:
[ansadm@ip-10-0-1-48 nginx-1]$ ansible-galaxy login --github-token 519dddf88318fe5add740efedd2202a58aa2ad6af12
Successfully logged into Galaxy as knowledgeshare99
[ansadm@ip-10-0-1-48 nginx-1]$

Importing a role to github using ansible-galaxy :
$ ansible-galaxy import github_user github_repo

Ex1:
$ansible-galaxy import knowledgeshare99 ksgalaxy-httpd-1.git
Successfully submitted import request 398125
Starting import: task_id=398125, repository=knowledgeshare99/ksgalaxy-httpd-1.git

Ex2:
$ansible-galaxy import knowledgeshare99 mystaticwebsite
Successfully submitted import request 398158
Starting import: task_id=398158, repository=knowledgeshare99/mystaticwebsite

Task "398158" failed: No content found in repository


Search for role :
Search the Galaxy database by tags, platforms, author and multiple keywords. For example:
$ ansible-galaxy search elasticsearch --author geerlingguy

Delete a role :
The delete command requires that you first authenticate using the login command. Once authenticated you can remove a role from the Galaxy web site. You are only allowed to remove roles where you have access to the repository in GitHub.

$ ansible-galaxy delete github_user github_repo

---------- How to import GitHub SCM to Ansible Galaxy ---------------------
https://galaxy.ansible.com/docs/contributing/importing.html


========================================= Ansible Role =========================================

-----------About Role ?-----------------
http://docs.ansible.com/ansible/latest/playbooks_reuse_roles.html


-------------How to install a role from scratch ?--------------
https://docs.ansible.com/ansible/2.4/galaxy.html
Role structrue defining ?
https://www.azavea.com/blog/2014/10/09/creating-ansible-roles-from-scratch-part-1/

-------------What are Ansible Roles?-------------------------
Roles in ansible are next level of abstraction of amiable playbook
Roles can also be dependent on other roles, and when you install a role that has dependencies, those dependencies will automatically be installed
https://www.digitalocean.com/community/tutorials/how-to-use-ansible-roles-to-abstract-your-infrastructure-environment
http://docs.ansible.com/ansible/latest/playbooks_reuse_roles.html
Role Duplication and Execution:
Ansible will only allow a role to execute once, even if defined multiple times, if the parameters defined on the role are not different for each definition. For example:
---
- hosts: webservers
  roles:
  - foo
  - foo

If you want to pass duplicate run :
	1.	Pass different parameters in each role definition.
	2.	Add allow_duplicates: true to the meta/main.yml file for the role.

https://www.youtube.com/watch?v=FHSNM5yAUm8&list=PLLsor6GJ_BEEDCsQ0ZpfrdfOMjKNTIxtO&index=7
--------------- Role structure define ---------------
Benefits of using Roles ?
— idea of include files and combine them to form clean ,reusable abstractions
— easy to maintain/troubleshootingg the playbook

---------------Role structure :----------------
tasks - contains the main list of tasks to be executed by the role.playbook tasks which plays one by one tasks defined in main.yml of tasks
handlers - contains handlers, which may be used by this role or even anywhere outside this role(notifying the services).
defaults - default variables for the role (see Using Variables for more information).defining the some environment variables
files - contains files which can be deployed via this role.contains regular files those needs to be copied to target hosts/system,Which is kind of static data ,can’t be changes.
templates - similar to files ,but it contains dynamic data. contains templates which can be deployed via this role.
meta - defines some meta data for this role.role dependencies,owner,author and license ,etc,.. See below for more details.
Vars/groups_vars :variables definitions other. variables for the role (see Using Variables for more information).
ex :user_name : tomcat
java_home = /opt/app/java/jdk1.8/bin
port:8080
test --


About variables:
http://docs.ansible.com/ansible/latest/playbooks_variables.html
https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html


Ex:passing variables on the command line as external
$ansible-playbook release.yml --extra-vars "version=1.23.45 other_variable=foo"

---------------------- How to create/generate a role in ansible using ansible-galaxy ? --------------
$ansible-work KSb$ sudo ansible-galaxy init tomcat-repo
https://docs.ansible.com/ansible/2.4/galaxy.html
https://www.azavea.com/blog/2014/10/09/creating-ansible-roles-from-scratch-part-1/


---------------- Simple creation of https role-based playbook and run the playbook ------------------
Nice article:
http://redhatgov.io/workshops/ansible_tower/exercise1.5/

How to cut/divide the playbook into role structure and run ?
http://redhatgov.io/workshops/ansible_tower/exercise1.5/

a)
[ansadm@ip-10-0-1-48 roles]$ ansible-galaxy init apache-sample

b)Step by step implementing from Section-2

c)
[ansadm@ip-10-0-1-48 ansible]$ vi apache-site-role.yml
[ansadm@ip-10-0-1-48 ansible]$ cat apache-site-role.yml
---
- hosts: all
  become: yes
  become_method: true

  roles:
    - apache-sample
d)do all the steps before proceeding to step-7 under Section-2
[ansadm@ip-10-0-1-48 templates]$ cd /etc/ansible/roles/apache-sample/templates
[ansadm@ip-10-0-1-48 templates]$ pwd
/etc/ansible/roles/apache-sample/templates
[ansadm@ip-10-0-1-48 templates]$curl -O http://ansible-workshop.redhatgov.io/workshop-files/httpd.conf.j2
[ansadm@ip-10-0-1-48 templates]$curl -O http://ansible-workshop.redhatgov.io/workshop-files/index.html.j2
[ansadm@ip-10-0-1-48 templates]$ ls -lrt
total 16
-rw-rw-r-- 1 ansadm ansadm 11810 Mar 19 14:15 httpd.conf.j2
-rw-rw-r-- 1 ansadm ansadm   936 Mar 19 14:15 index.html.j2

e)Section 3: Running your new role-based playbook

First:
1)[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook apache-site-role.yml -i hosts --check

2)Execution :
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook apache-site-role.yml -i hosts -l webserver -u ansadm

3)verifications:
[ansadm@ip-10-0-1-48 ansible]$ ansible webserver -m command -a "ls -lrt /var/www/html/"
10.0.2.151 | SUCCESS | rc=0 >>
total 4
-rw-r--r-- 1 root root 919 Mar 19 14:25 index.html

4)
[ansadm@ip-10-0-1-48 ansible]$ ansible webserver -m command -a "sudo service httpd restart"
 [WARNING]: Consider using 'become', 'become_method', and 'become_user' rather than running sudo

10.0.2.151 | SUCCESS | rc=0 >>
Redirecting to /bin/systemctl restart httpd.service


And other article for reference :
https://www.digitalocean.com/community/tutorials/how-to-use-ansible-roles-to-abstract-your-infrastructure-environment
https://cloudacademy.com/blog/building-ansible-playbooks-step-by-step/


Role implementing for nginx:
https://www.digitalocean.com/community/tutorials/how-to-use-ansible-roles-to-abstract-your-infrastructure-environment

------------ Abstracting a playbook for a role -------------
https://www.learnitguide.net/2018/02/ansible-roles-explained-with-examples.html

Somemore examples : tomcat,mysql and php ,etc,...
https://github.com/knowledgeshare99/aws_ansible_cfn-rs/tree/master/roles

Ex1: Tomcat roles :


a) first cloe from the below github
$cd /tmp
$git clone https://github.com/knowledgeshare99/aws_ansible_cfn-rs.git
$cd aws_ansible_cfn-rs/roles/
$cp -r tomcat /etc/ansible/roles/

b)you have to create a plyabook for tomcat executions

$cd /etc/ansible
$vi tomcat-roles.yml
---
  - hosts: all
    become: yes
    become_method: sudo
    vars_files:
      - vars/main.yml
    roles:
      - tomcat

c)Now check dry run
$ansible-playbook tomcat-roles.yml --check

d)Exuection of playbook for tomcat role installation

$ansible-plabook tomcat-roles.yml -i hosts -i webserver

e)How to check the tomcat process whether its reunning or not ?
#ansible all -m shell -a "ps -ef|grep tomcat"

note: Please check again tomcat appslication in your chrome browser

f)how to stop tomcat using module ?
$ansible all -m shell -a "suod /etc/init.d/tomcat stop"


========================================= Ansible variables =========================================
About variables ?
http://docs.ansible.com/ansible/latest/playbooks_variables.html


========================================= ansible-tower overview =========================================
https://docs.ansible.com/ansible/2.4/tower.html

Ansible Tower (formerly ‘AWX’) is a web-based solution that makes Ansible even more easy to use for IT teams of all kinds. It’s designed to be the hub for all of your automation tasks.

Tower allows you to control access to who can access what, even allowing sharing of SSH credentials without someone being able to transfer those credentials. Inventory can be graphically managed or synced with a wide variety of cloud sources. It logs all of your jobs, integrates well with LDAP, and has an amazing browsable REST API. Command line tools are available for easy integration with Jenkins as well. Provisioning callbacks provide great support for autoscaling topologies.


=========================================Launching AMI EC2 for free tier?=========================================
1) https://www.ansible.com/tower-trial

2)Login info
http://docs.ansible.com/ansible-tower/2.3.0/html/quickstart/login_superuser.html

3)dashboard :
http://docs.ansible.com/ansible-tower/latest/html/userguide/main_menu.html


========================================= AWS EC2 instance creation using Playbook and role =========================================
http://docs.ansible.com/ansible/latest/ec2_module.html
http://www.bogotobogo.com/DevOps/Ansible/Ansible-aws-creating-ec2-instance.php
http://docs.aws.amazon.com/cli/latest/userguide/cli-ec2-keypairs.html

Ec2creation.yaml:
1)create a custom security group
2)spins up new ec2 intances
3)waits for ssh to become active on instance
More examples here in githu :
https://github.com/knowledgeshare99/ansible-ks-all.git
Ex1:
- hosts: localhosts
  tasks:

   - name: setting up security group
     ec2-group:
         name: KS_AWS-security_group
         description: rules allowing
          region: us-west-2
        rules:
     -proto:
    from_port: 80
     to_port: 80
     cidr_ip:0.0.0./0

    - name: provision a EC2 instance
      ec2:
          key_name: KS-key
          instance_type: t2.micro
          image: ami-775e4f16
           wait: yes
          wait_timeout: 500
          count: 1
          instance_tags:
                name: awslabserver
                owner: KS
          monitorign: no
          vpc_subnet_id: subnet-920v30f6
          assign_public_ip: yes
          group: KS-awssecuritygroup
          register: ec_out

    - name: wait for ssh to come up
        wait_for: host={{imte.publicdnsname}} port=22 timeout=320 state=started
       with_items: '{{ec2_out.instances}}'


Ex2:Luanching Ec2 instance
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook ec2-luanching.yml -i hosts -l localhostgroup
[ansadm@ip-10-0-1-48 ansible]$ cat  ec2-luanching.yml
---
- name: Create a new Demo EC2 instance
  hosts: all
  gather_facts: False

  vars:
      region: us-west-2
      instance_type: t2.nano
      ami: ami-061392db613a6357b # Amazon AMI  16.04 LTS
      keypair: KS-Oregon-Class-Key # pem file name

  tasks:

    - name: Create an ec2 instance
      ec2:
         key_name: "{{ keypair }}"
         group: My-Custom-VPC-SG  # security group name
         instance_type: "{{ instance_type}}"
         image: "{{ ami }}"
         wait: true
         region: "{{ region }}"
         count: 1  # default if you want to launch more than 1 Ec2 you can give still 2 or 3 ,etc
         count_tag:
            Name: Ansible-EC2-Demo
         instance_tags:
            Name: Ansible-EC2-Demo
         vpc_subnet_id: subnet-091ce7b7d16b6be69 # please choose the subnet Id from AWS VPC dashboard
         assign_public_ip: yes
      register: ec2


Ex3:How to terminate Ec2 using playbook ?
[ansadm@ip-10-0-1-48 ansible]$ ansible-playbook ec2-remote.yml

ec2-instance-removed.yml

- name: Terminate instances
  hosts: localhost
  connection: local
  tasks:
    - name: Terminate instances that were previously launched
      ec2:
        region: us-west-2
        state: 'absent'
        instance_ids: i-04f7fcc80d889dde3

Note: please make sure that you must install "pip","boto" and aws configure
https://www.linuxnix.com/python-boto-how-to-install-and-configure-in-linuxunix/

https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install-linux.html
How to set pip environment variables :
https://stackoverflow.com/questions/34103119/upgrade-pip-in-amazon-linux
Go to ansible master server then do aws configure
[ansadm@ip-10-0-1-48 ansible]$ which pip
~/.local/bin/pip
$export PATH= $PATH:$HOME/bin:/home/ansadm/.local/bin/pip
$pip
$pip install boto --user
How to create a user in AWS IAM ?
Go to AWS Console --Click on Services --> search "IAM" --> under "user"--> Click create -> and select "programatic access" then assign in forth options policy "administrator"--finally create a user
Note: Please note somewhere user access key and secrete key.
Go to ansible master server then do aws configure
$aws configure
aws_access_key_id = <YOUR_ACCESS_KEY_ID?
aws_secret_access_key = <YOUR_SECRET_ACCESS_KEY>


========================================= Best practices for Ansible playbook and others =========================================
http://docs.ansible.com/ansible/latest/playbooks_best_practices.html

----------- ansible vs chef --------------
http://tjheeta.github.io/2015/04/15/ansible-vs-chef/

-------------- iptables ? ------------------------------
https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands
==================================================================================
                          Chef : CM tool
==================================================================================

about chef ? and overview architecture ?
https://docs.chef.io/chef_overview.html

Installation Chef DK ?
https://docs.chef.io/install_dk.html


Chef generate app ?
https://docs.chef.io/ctl_chef.html#chef-generate-app

About Knife ?
https://docs.chef.io/knife_cookbook.html

Simple cookbooks ?
https://www.digitalocean.com/community/tutorials/how-to-create-simple-chef-cookbooks-to-manage-infrastructure-on-ubuntu


how to create a simple CUPS printer cookbooks using chef super market ?
https://supermarket.chef.io/cookbooks/cups


School of devops ?
https://schoolofdevops.teachable.com/courses/133372/lectures/3518507

==========================================difference between chef and ansible ==========================================
http://tjheeta.github.io/2015/04/15/ansible-vs-chef/
https://www.intigua.com/blog/puppet-vs.-chef-vs.-ansible-vs.-saltstack



======================================================================================================
                             Jenkisn CI/CD
======================================================================================================
8)Jenkins – Continuous Integration
• Introduction.
o Understanding continuous integration
o Introduction about Jenkins
o Build Cycle
o Jenkins Architecture
• Installation
o Obtaining and installing Jenkins
o Installing and configuring Jenkins using WAR and RPM
o Java installation and configuration
o Maven Installation
o Exploring Jenkins Dashboard
o Jenkins plugins
o Build Pipeline view
o Delivery Pipeline view
• Jobs
o Creating Jobs
o Running the Jobs
o Setting up the global environments for Jobs
o Adding and updating Plugins
o Disabling and deleting jobs
• Build Deployments
o Understanding Deployment.
o Tomcat installation and configuration
• Managing node
o Launching slave nodes
o Deploying jobs on slave nodes
o Slave authentication
• Securing Jenkins
o Authentication
o Jenkins Plugin
o Authorization
o Confidentiality
o Creating users
o Best Practices for Jenkins

#############################  Introduction ###########################
• Introduction.
o Understanding continuous integration
o Introduction about Jenkins
o Build Cycle
o Jenkins Architecture

What is jenkins ?
Jenkins is a java based CI and CD tool mostly used by software and Devops engineers. its a server based system running web applications .Jenkins’s automation can run repeated jobs . With jenkins one can create/start/monitor the jobs (automation jobs and shell commands ),also inter-job dependencies can be created .


Features :
— Easy to install and can be managed by GUI and CLI
- installation type we can do either tomcat deployables or through repository
— configuration is very easy
— have a multiple plugins for most of the latest/popular/widely used services ,..Example AWS,GIT,Azure,,etc,..
— supports build pipeline and delivery pipeline

Installation types 3-ways:
https://www.edureka.co/blog/install-jenkins/
a)UI
b)CLI
c)Deploying jenkins.war Through tomcat webapps

---------- Jenkins CICD ---------

Jenkins Pipeline for Continuous Delivery and Deployment:
https://dzone.com/articles/starting-automation-testing-from-scratch-here-is-w

Building a Continuous Delivery Pipeline Using Jenkins:
https://dzone.com/articles/building-a-continuous-delivery-pipeline-using-jenk

##########################  Installation #########################
Installation
o Obtaining and installing Jenkins
o Installing and configuring Jenkins using WAR and RPM
o Java installation and configuration
o Maven Installation
o Exploring Jenkins Dashboard
o Jenkins plugins
o Build Pipeline view
o Delivery Pipeline view

------------------------- 1) Installation jenkins on linux ------------------------------

https://www.linuxtechi.com/install-configure-jenkins-on-centos-7-rhel-7/

Here use JDK 1.8 versin instead of 1.7 while installing so first install java before installing "jenkins"
First do it update  in case if you launched newly EC2 :
1)
#yum update
#yum install -y jdk1.8
(or)
#yum install -y java
(or)
[root@jenkins ~]# yum install java-1.8.0-openjdk –y

2)
--->Download the repo of "jenkins" then download jenkins key and proceed for installation jenkins.
[root@jenkins ~]# wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat-stable/jenkins.repo
[root@jenkins ~]# rpm --import http://pkg.jenkins.io/redhat-stable/jenkins.io.key

---> install jenkins using yum on master node
#yum install jenkins

3)Path installed default :

3.1) start jenkins service
#service jenkins status
#service jenkins start
3.2)
[ansadm@ip-10-0-0-250 ec2-user]$ cd /var/lib/jenkins/
[root@ip-172-31-24-165 jenkins]# ls -rlt
total 32
-rw-r--r-- 1 jenkins jenkins   64 Feb 23 15:16 secret.key
-rw-r--r-- 1 jenkins jenkins    0 Feb 23 15:16 secret.key.not-so-secret
drwxr-xr-x 2 jenkins jenkins    6 Feb 23 15:16 plugins
drwxr-xr-x 2 jenkins jenkins    6 Feb 23 15:16 jobs
-rw-r--r-- 1 jenkins jenkins  156 Feb 23 15:16 hudson.model.UpdateCenter.xml
-rw------- 1 jenkins jenkins 1712 Feb 23 15:16 identity.key.enc
-rw-r--r-- 1 jenkins jenkins  171 Feb 23 15:16 jenkins.telemetry.Correlator.xml
drwxr-xr-x 2 jenkins jenkins    6 Feb 23 15:16 nodes
drwxr-xr-x 2 jenkins jenkins   24 Feb 23 15:16 userContent
drwxr-xr-x 3 jenkins jenkins   19 Feb 23 15:16 logs
-rw-r--r-- 1 jenkins jenkins  907 Feb 23 15:16 nodeMonitors.xml
-rw-r--r-- 1 jenkins jenkins    7 Feb 23 15:16 jenkins.install.UpgradeWizard.state
drwxr-xr-x 3 jenkins jenkins   56 Feb 23 15:16 users
-rw-r--r-- 1 jenkins jenkins   94 Feb 23 15:16 jenkins.CLI.xml
drwx------ 4 jenkins jenkins  265 Feb 23 15:16 secrets
drwxr-xr-x 2 jenkins jenkins   67 Feb 23 15:17 updates
-rw-r--r-- 1 jenkins jenkins 1640 Feb 23 15:17 config.xml
[ansadm@ip-10-0-0-250 jenkins]$ pwd
/var/lib/jenkins

4)go to browser then give the below link to launch jenkins console http://ip:8080/
http://34.212.9.187:8080

4.1)
First Initialisation administrator pwd ,get the passowrd from "cat /var/lib/jenkins/secrete/InitialPasswod(by default path)
#cat /var/lib/jenkins/secrets/initialAdminPassword
7bd41f51fc934c5a91f46869d88b53ed
and paste on jenkins console  then click on "install suggested plugins" and then create "user/pwd" for new once its appearing the console

4.2)Jenkins plugins most popular in Realtime  :
Note: You first install the below plugins
Go to jenkins console --> Click on "Manage Jenkins"-->Click on "manage plugins" --> then again click on "Available" tab then select all the below listed given plugins.

SSH   ---> This plugin executes shell commands remotely using SSH protocol.
SSH agent   ----> This plugin allows you to provide SSH credentials to builds via a ssh-agent in Jenkins
Python --> Adds the ability to execute python scripts as build steps.
Powershell  -->This plugin allows Jenkins to invoke Windows PowerShell as build scripts.
Schedule  -->Adds capability to schedule a build for a later point in time.
Job import: to import the destination Jenkins jobs into source
https://staxmanade.com/2015/01/how-to-migrate-a-jenkins-job-to-new-jenkins-server/
https://stackoverflow.com/questions/9038748/how-do-i-copy-a-job-from-one-instance-to-another
https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin

JDK parameter --- > java version from where you need to pick the java and execute the jenkins jobs either in slave or master
Build with parameter
View Job Filters(JobFilter)
Build now(Customize Build Now Label) -->This plugin allows users to provide an alternate phrase to "Build Now" to build a job. Sometimes is more intuitive for users to call "Deploy now" instead of "Build Now" to execute a job.
Build time out(Build Time Blame) -->
Rebuilder -->This plugin is for rebuilding a job using the same parameters.
Green balls -->Because green is better than blue! For color blind support configure user property.
Mask passwords -->This plugin allows masking passwords that may appear in the console.
slack plugin --> This plugin is a Slack notifier that can publish build status to Slack channels.
schedular job -->
Safe Restart — to restart Jenkins in console
Ansicolor
TestNG
JUnit
xUnit -->This plugin makes it possible to record xUnit test reports.
perfomence Trend --
Sonarqub
Timestamp
Pipeline Stamp
ImportPlugin
Archive
ThinBackup --> Backup and Restore
Metrics Disk Usage ---> to see the disk trends of jenkins jobs
(https://www.studytonight.com/jenkins/backup-management)
Build Time stamp
SalckNotication
Javatestreport
slave-status -->Can be configured on "Manage jenkins --> "Configuration settings"
Build Monitor View --> Can be configured on "Manage jenkins --> "Configuration Systems"
Flow -->
Downstream Build view
Jira issue
Test result Analyser
Build-publisher
slack upload
Dashboard view
Projetbuild view
Docker API
Jacoco -->This plugin integrates JaCoCo code coverage reports to Jenkins.
JUnit -->Allows JUnit-format test results to be published.
NUnit -->This plugin transforms NUnit test reports so they can be recorded by Jenkins' JUnit features.
Sonargraph
Delivery Pipeline plugin
Build Pipeline plugin
Github
Git
Multijob --> this is job uses to run multiple jobs one after other based on job status (stable/failrue/success)
Ansible
Amazon EC2
S3 publisher -->This is a plugin to upload files to Amazon S3 buckets
Amazon S3 Bucket Credentials -->
Amazon ECS -->
AWS Elastic Beanstalk Deployment
AWS Elastic Beanstalk Publisher
AWS Codebuild
AWS Lambda
disk-usage plugin
Build Timeout
Test Results Analyzer -->This plugin shows history of test execution results in a tabular or graphical format.
PagerDuty Plugin -->This plugin can trigger PagerDuty incidents.
TextFinder plugin-->This plugin is used to search for strings in workspace files. The outcome of this search can be used to mark the build as normal or failed.
Workspace Cleanup-->
PAM Authentication --> Adds Unix Pluggable Authentication Module (PAM) support to Jenkins
MSBuild --->This plugin makes it possible to build a Visual Studio project (.proj) and solution files (.sln).
MSTest -->This plugin converts MSTest TRX test reports into JUnit XML reports so it can be integrated with Hudson's JUnit features.
MSTestRenner --->This plugin run MSTest command line tool to execute unit tests for .NET projects.
NodeJS -->Nodejs deploy apps
P4  - perforce this is also version controle
Ant - build tool
Maven  -- this is also build tool
Gradle  -- this is also build tool
Groovy  -- >> scritping language
Deployment descriptor  --> which should be deployed on appservers
Pipeline job ---> its build flow one after other
Ansicolor — for pipeline simple jobs
Email notification plugin -->  to nitify the team DL whether job is success or not error
Upstream build view -- > first execute the job upper once this is success then go for execution below job(downstream job)
Downstream build view plugin
Blue Ocean : to view jenkins build jobs on it screen like view
Build Environment Plugin -->
Environment Injector Plugin -->
Job Configuration History Plugin ---- >> when job history who logged in and who modify based on user history
Global password plugin —-- >to use id and passed in “Configure system”
Job config history :
AWS SNS build notifier --->
Build flow plugin  ---->
Build graph plugin   --->>
Copy artifact plugin  --->
Copy to slave plugin   ---->
Discard old build plugin --->
Build Timestamp Plugin:
We can follow the build number based on timezone

4.3)About manage plugin manager ?
how to update , installed ,available and Advance ?

4.4) Please add "jenkins" sudoers list "/etc/sudoers"
[root@ip-10-0-2-83 ec2-user]# vi /etc/sudoers
root	ALL=(ALL) 	ALL
jenkins ALL=(ALL)       NOPASSWD: ALL

then save and exit from "/etc/sudoers"

4.5)Then please check sudo permissions for "jenkins"
[root@ip-10-0-2-83 ec2-user]# sudo yum update
(Or)
isntalling any package
[root@ip-10-0-2-83 ec2-user]# sudo yum install telnet

Note: if it passes then jenkins is having sudo permissions.

4.6)After installation try to switch to "jenkins" user
[root@ip-10-0-2-83 ec2-user]# su jenkins
bash-4.2$

Note : In case if not taking into switch user then please try to modify the below line in ""/etc/passwd ""
bash-4.2$ sudo cat /etc/passwd
jenkins:x:996:994:Jenkins Automation Server:/var/lib/jenkins:/bin/false

Here just replace with "false" to "bash" then save it and exit "/etc/passwd"

Then after try to switch the user "jenkins "
[root@ip-10-0-2-83 ec2-user]# su jenkins
bash-4.2$

4.7) Please make sure that /var/lib/jenkins manages by "jenkins" user only
Changing the ownership :
[root@ip-10-0-2-83 ec2-user]# chown -R jenkins:jenkins /var/lib/jenkins

Changing the mod permissions :
[root@ip-10-0-2-83 ec2-user]#chmod -R 755 /var/lib/jenkins


---------------------- 5)Creating jenkins sample jobs and execution --------------------------
Job 1) created sample job as Logviewer for giving developer to see the log output on Master node
--->Click on NewItem
Give the job Name as "LogviewerLocal
and description " this is my local job running to view my /var/log/messages"
--->Under Build : select "execute shell" then please past the below command in shell
sudo cat /var/log/messages
---> save and click on "buildNow"
---> look at the "Console Output"

Job 2) Create a simple job for installing package
--->Click on NewItem
Give the job Name as "LinuxCommands"
and description " this is my local job running to install the packages "
--->Under Build : select "execute shell" then please paste the below command in shell
sudo yum install wget -y
---> save and click on "buildnow"
---> look at the "Console Output"

Job 3) To check the disk filesystem ,memory of system, listing directory structure
--->Click on NewItem
Give the job Name as "System-Info"
and description " this is my local job running to list out the disk filesystem,Memory and directory structrue listing"
--->Under Build : select "execute shell" then please pass the below commands in shell

sudo df -h;uname -a;free -h
sudo ls -lrt /var/lib/jenkins/

---> save and click on "buildnow"
---> look at the "Console Output"

Job 4)To execute the shell script deploy from local
--->Click on NewItem
Give the job Name as "shell-deploy-test"
and description " this is my local job executing shell deploy script "
-->Pulling from the GitHub account
Under SCM: select "git" then give the "staticwebsite" repo git url ex: below
https://github.com/knowledgeshare99/staticwebsite.git

---> Under : "Build Environment"
Please enable "Delete workspace before build starts"
--->Under Build : select "execute shell" then please pass the below command in shell

sh /var/lib/jenkins/scripts/staticdeploy.sh

Note: Please
---> save and click on "buildnow"
---> look at the "Console Output"


Job 5)Create a job for install "httpd" and restart httpd on Master node
--->Click on NewItem
Give the job Name as "httpd_install-restart"
and description " this is my local job to install the httpd package and restart httpd "
--->Under Build : select "execute shell" then please paste the below command in shell

sudo echo "####### installation of httpd webserver #########"
sudo yum install httpd
sudo echo "####### status of httpd webserver #########"
sudo service httpd status
sudo echo "####### restart of httpd webserver #########"
sudo service httpd restart
sudo echo "####### again checking status httpd webserver #########"
sudo service httpd staus

---> save and click on "BuildNow
---> look at the "Console Output"

Job 6)Created static website and execute under local(master server).
-->Click on "NewItem"
give the jobName as "StaticWebLocalDeploy"
and give the description

-->Pulling from the GitHub account
Under SCM: select "git" then give the "staticwebsite" repo git url ex: below
https://github.com/knowledgeshare99/staticwebsite.git
--->Under Build --> select "execute shell" and then copy and past the below shell script

#!/bin/bash

echo "######### stop httpd service ##############"
sudo service httpd stop

echo "############# Uninstall httpd ###########"
sudo yum remove -y httpd

echo "############### Install httpd ############# "
sudo yum install -y httpd

echo "########## removing the existing content from the below /var/www/html/* #########3"
sudo rm -rf /var/www/html/*

echo "######## copying the workspace job content to /var/www/html########## "
#sudo cp -r <yourjob-workspace>/* <destination-where-you-want-to-deploy
sudo cp -r /var/lib/jenkins/workspace/StaticWebsite-GitLocal/* /var/www/html/

echo "########### Listing the content of /var/www/html ############"
sudo ls -lrt /var/www/html/
echo "######### start httpd service ##########"

sudo service httpd start

---> "Save" and click on "BuildNow"
--->Look at consoleOutput


Job 7)Remote job log viewer
Using slave node
--> Give the jobname and description
-->Under Build Environment: Please select "Delete workspace before build " option
--->Under Build --> select "execute shell" and then type the below command
sudo cat /var/log/messages

Job 8)Installed SSH agent plugin and SSH remote

################### launching slave node and configuration between master(jenkins) and slave(remote-node)###########
1)Login into slave node then su jenkins
#su jenkins
$chown -R jenkins:jenkins /home/jenkins/

Note: please make sure OS compatibility should be same both nodes. ex: jenkins(master) server jdk 1.8 then slave node also should be 1.8 jdk installed

Job 9) Please make sure that from "Job 1)" to "Job 7)" ,you will to try creating all these jobs newly again by running on "slavenode"

--------------------------- 10) how to create ssh key passwordless key in master and slave node -----------------
###############STEP A) ####################
How to ssh-keygen created for /var/lib/jenkins dir
How to generate ssh-key gen ?
https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/

Ex:Go to master server :
ssh-keygen -t rsa -b 4096 -C "your_email@example.com" -f $HOME/.ssh/id_rsa

Incase trial :
bash-4.2$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/var/lib/jenkins/.ssh/id_rsa):

Note: if you see the above path then click "enter" and "enter" .incase if it's not getting from the above steps then please follow the below steps

--->In master jenkins node :
Note:make sure that jenkins userid should be added in /etc/sudoers(to give sudo permissions for "jenkins" userid) list then proceed switching "jenkins" userid
step a)
--->ssh-keygen generating on Master node
First create a folder /var/lib/jenkins/.ssh
$sudo mkdir /var/lib/jenkins/.ssh/
$sudo chmod -R 700 /var/lib/jenkins/.ssh/

step b)
Generate a ssh-keygen on master as following below example under "jenkins" userid
#su jenkins
[jenkins @ip-172-31-20-134 jenkins]$ ssh-keygen -t rsa -b 4096 -C "knowledgeshare99@gmail.com" -f /var/lib/jenkins/.ssh/id_rsa
or
[jenkins@ip-172-31-32-219 jenkins]$ sudo ssh-keygen -t rsa -f /var/lib/jenkins/.ssh/id_rsa

step c)Change the ownershipt and group permissions to "jenkins:jenkins"
$sudo chown -R jenkins.jenkins /var/lib/jenkins

############### STEP B) On slavenode ####################
----> ssh-keygen generating same on slavenode:
step a) And also you have to do it again on all the slavenodes as following below under "root" user
--> create a userid "jenkins"
#useradd -d /home/jenkins jenkins
#id jenkins

step b)
--> set a password for "jenkins" userid and add(jenkins userid) into /etc/sudoers list for giving "sudo previliges" to "jenkins" userid as kind roots admin previliges.
First set the password for "jenkins" userid as below
#passwd jenkins
#vi /etc/sudoers
root ALL=(ALL)       NOPASSWD: ALL
jenkins ALL=(ALL)       NOPASSWD: ALL

Testing sudo permissions for "jenkins" userid :
#su jenkins
[jenkins@ip-10-0-0-250 jenkins]$sudo yum update
Note: If it passes the updates completely then that means "jenkins" having sudo previliges.

step c) then generate ssh-keygen on slavenodes switch to "jenkins" userid from "root"
#su jenkins
ex: [jenkins@ip-10-0-0-250 jenkins]$ sudo ssh-keygen

[Just enter ,enter and enter without entering any password which creats ".ssh" directory under user home dir of "jenkins"(/home/jenkins/.ssh)]
$sudo cd /home/jenkins/.ssh
$sudo vi authorized_keys

Note: Keep it ready to open "authorized_keys" the file to copy "id_rsa.pub" of master node jenkins userid.
############### STEP C) ####################
step a)Login into Master jenkins node then follow the steps
---> #cat /var/lib/jenkins/.ssh/id_rsa.pub
copy this (id_rsa.pub) key from master node jenkins to slave node of "jenkins" userid.then past it on slavenode inside "authorized_keys" file

step b)
--->Login slave node(switch to "jenkins userid" from "root") perform the below steps
#su jenkins
$sudo cd /home/jenkins/.ssh
$vi authorized_keys

Copy and past id_rsa.pub of master jenkins public key in the above slave node file(authorized_keys)

Ex:
[jenkins@ip-10-0-2-35 .ssh]$ ls -rlt
total 12
-rw-r--r-- 1 jenkins jenkins  429 Feb 28 14:02 id_rsa.pub
-rw------- 1 jenkins jenkins 1679 Feb 28 14:02 id_rsa
-rw------- 1 jenkins jenkins  758 Feb 28 14:07 authorized_keys
[jenkins@ip-10-0-2-35 .ssh]$ cat authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDmgQGZqd7pvPPaXuNoVO/+768rKxjDUCy4GATu1lcCLmTJZMW+UzEj1E7f6xsTeL5R5PUjOrwtVWmGXyiToN0DLm8d9iKsmfbIF8Fng2xJ9OWiBqc1TxydnCElHmU37BUg5kS+/jKpol4+MBhcNb/kG89n4ejBUnRRd19UK7N1G3W2JDywOoTiXiMx5gJ9fmmHZ/Ayo9ObqWI0DKO5zD7WhzNHZ+MN8n3j5gUcMWCuT6BejNbyqNJmDcV7KXmZ3XDv+qJ8psXNugZ/046Qi48M9Qk4F6Yx0nKJCU0pdYGlTzcW/PSDaplKsU2CIUZBFVSNJRV4PAntlUNNNnRopGnh6ATvdSr7cUT4fX6aeG1es0p5dgCu3p/tq2VhNgy9xanjFUlf54014uw9cstZuq580F/JN+Y2yhVoiNvzkdLqEpAwW6/mfopk7yuN1Z9JXxKuuKdg2q9zAGneKTa0BaechdHFOZXRuKxDtIziglmKI6VgnGqAcX+Gj4N69J2Mf8lO1Z648cNKm1hbilUEcbkQ6cvEZZfpIEyl+Com2wRefRiEKOSD1k3GWbdUoJ36iTS1OmQWBnbzjOkGzfSm9lU35zV/YpeZ6Vjc5tJUsvwuKzu/GGfmfkFBLiswU/vV/vTGBpDeSyC105IVweQG+Qcg4l0A8PD1hyEBsCRwz47H9w== “knowledgeshare99@gmail.com”
[jenkins@ip-10-0-2-35 .ssh]$


step c) then change the file permissions of authorized_keys to 600 or 400 then again change ownership of "jenkins" user id on slavenode as follows
Switching user to "jenkins" userid from "root"
#su jenkins
$sudo cd /home/jenkins/
$sudo chown -R 700 .ssh
$sudo cd /home/jenkins/.ssh
$sudo chown -R jenkins:jenkins /home/jenkins/.ssh
$sudo chmod 600 authorized_keys
or
$sudo chmod 400 authorized_keys

Step d) then test the ssh remote connectivity from master node to login into slave node then do "ssh <slavenode-ip" from master node
#Log-in into master node then execute the below command
#su jenkins
$ssh slavenode-hostip
Note: If userid same on both servers only ,you will have to execute the above "ssh" command (master and slave like ex:jenkins userid)
(or)
#ssh <userid>@slavenode-hostip

If the userid would be different than master please pass the exact userid and hostip of remote from master node.

Ex:
#ssh 10.19.122.33
(or)
#ssh slavenode-hostip -l root
// which means that you directly login as a "root" in slavenode from control(master)server

Note: In case if you want to connect with different userid then give as below (But incase if its same userid like "jenkins" created on master and slavenode then need not to pass userid@hostip)
#ssh ansadm@slavenode-hostip
Note: if you logged into slavenode prompt then that means ssh connectivity working fine from master node to slave node

Step e) Make sure that jenkins log dir should be owner and group(jenkins:jenkins) on master jenkins node
#su jenkins
bash-4.2$ pwd
/var/log
bash-4.2$ sudo chown -R jenkins.jenkins /var/log/jenkins

Step f)If you face any restart issues then take a look at logs of jenkins.log
Ex: issue faced in real time practice
#cat /var/log/jenkins/jenkins.log

INFO: Logging initialized @1073ms to org.eclipse.jetty.util.log.JavaUtilLog
Dec 18, 2018 2:32:11 PM winstone.Logger logInternal
INFO: Beginning extraction from war file
Dec 18, 2018 2:32:11 PM winstone.Logger logInternal
INFO: Jetty shutdown successfully
java.io.FileNotFoundException: /var/cache/jenkins/war/META-INF/MANIFEST.MF (Permission denied)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(FileOutputSt

Solution: for the above error in "jekins.log" :Follow the below steps
bash-4.2$ sudo chown -R jenkins.jenkins /var/cache/jenkins
bash-4.2$ ls -lrt
total 344
-rw-r--r-- 1 jenkins jenkins 351862 Dec 18 14:32 jenkins.log
bash-4.2$ pwd
/var/log/jenkins
bash-4.2$ sudo chown -R jenkins.jenkins /var/cache/jenkins

Step f)then restart jenkins and check the status
$sudo service jenkins restart
$sudo service jenkins status
Troubleshooting "jenkins.log"

You can see the jenkins.log output successfully started or stopped.
Ex:
bash-4.2$ pwd
/var/log/jenkins
bash-4.2$ tail -300f jenkins.log
INFO: Started w.@4a07d605{Jenkins v2.150.1,/,file:///var/cache/jenkins/war/,AVAILABLE}{/var/cache/jenkins/war}
Dec 18, 2018 2:34:58 PM org.eclipse.jetty.server.AbstractConnector doStart
INFO: Started ServerConnector@6ea22a2c{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
Dec 18, 2018 2:34:58 PM org.eclipse.jetty.server.Server doStart
INFO: Started @3427ms

-------- How to copy id_rsa.pub key into all the slavenodes(more than 2 servers) at a time using simple shell script -------

1)
$sudo vi ssh-copy-script-slave.sh
#''''''''''''''''''''''''''''''''''''''''''''
#!/bin/bash
for host in centos1 centos2 centos3;
do
  sudo ssh-copy-id <control-user>@$host; // copying public-key into all the three slave nodes inside of /home/<user>/.ssh/authorized_keys

  sudo ssh -i /home/ansadm/myawskey.pem <slave-user>@$host;  // checking the ssh connectivity from your control server
  sudo ansible all -m ping // incase if you're configured ansible control server to check the ping service from all 3-slave
done
#''''''''''''''''''''''''''''''''''''''''''''

2)Then try to execute the above shell sctip from master to add id_rsa.pub file into all the slavenode

Ex: $sudo sh ssh-copy-script-slave.sh

---------- How to create a slavenode and launching a slavenodes in jenkins console -----------
https://devopscube.com/setup-slaves-on-jenkins-2/
https://linuxacademy.com/blog/devops/adding-a-jenkins-agent-node/
Step 1) Go to "jenkins console "
Click on "Manage Jenkins" -->Click on "Manage Nodes" -->Then click on "New node" --> Then give the slave node name "myslave1" --> Select "Permanet Agent" and click on "OK"

Step 2) Give the slave node description as
"This is my slave node activities"
and then
-->Under Root directory : give the below path and also "remoteprojects" dir must be created before itself only on slave node1.
  "/home/jenkins/remoteprojects"
-->Under #executors : give the number "10"
-->Under Label :Give the lable name as "Mylabel"

------------- Integration between jenkins and github -------------------

How to integrate between github and jenkins?
Option a)
Go to Github account repo name of Organization: "staticwebsites"  -->> settings ----> click on "integrate and service" --> search "Jenkins(Github) ---> click on "addservice"
then you can go ahead for creating github account repo in jenkins jobs as below example

(or)

Option b)
Go to Github Organization -->> "Settings" --> click on "webhooks"--->> again click on "Add Webhook" and confirm "Password"-->then
Under "Payload URL" -->>give the your Jenkins URL: Ex: http://34.217.27.129:8080/github-webhook/ ---> click on "Add Webhook"-->Try to see the respne "200" success once you're added the url for load the jenkins url

Jobs:
1)simple echo jobs
2)review logs
3)Statiwebite job running on jenkins mater
4)staticwebsite CI jobs integrating with github and jenkins

Note:For online notes
select the options to trigger "GitHub hook trigger for GITScm polling" under "Build Environment"
On the v1.25.1 release of the GitHub plugin, trigger Build when a change is pushed to GitHub has been renamed to GitHub hook trigger for GITScm polling."

https://stackoverflow.com/questions/41934478/build-when-a-change-is-pushed-to-github-is-missing

------------------------- Migrating jobs from existing old jenkins to other jenkins server ---------------------------------
5)How to migrate the jobs from existing jenkins server to new jenkins server ? how many ways we can do ?
there are three ways that we can do

a)One is copying the jobs directories from exising jenkins(/var/lib/jenkins/jobs/sample-job) to new jenkins server(/var/lib/jenkins/jobs/sample-job-new) jobs directory then
Click on "reload the configuration from disk" on new jenkins server console -->go to "Manage jenkins " --> click one "reload the configuration from disk"
then you can see the jobs that you copied one in new jenkin server

Note: you always looks at owner and group permissions of New jenkins(destination) after copied to destination path

Ex:
Copy from AWS EC2 to my local system :
hostname:Downloads KS$ scp -i KS-Oregon-Class-Key.pem ec2-user@18.236.69.233:/tmp/LogViewJob.tar.gz .
/etc/profile.d/lang.sh: line 19: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory
LogViewJob.tar.gz                                                                    100%  103KB 104.6KB/s   00:00
hostname:Downloads KS$

Copy a job from Local computer to Ec2 AWS :
hostname:Downloads ks$ scp -i KS-Oregon-Class-Key.pem LogViewJob1.tar.gz ec2-user@18.236.69.233:/tmp
/etc/profile.d/lang.sh: line 19: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory
LogViewJob1.tar.gz                                                                   100%  103KB 103.1KB/s   00:01
hostname:Downloads ks$


b) is using "Jobs import plugin " -need to install this plugin on new jenkin server then should be enabled firewal of existing jenkins and new jenkins server
then we can do import the multiple jobs at a time from New jenkinw server console by clicking on "Jobs import plugin" option"

c)Using Jenkins CLI option from new jenkins server ,existing jenkins jobs we can convert into .xml file then we can
Follow the links for more details about migration of one jenkine to other jenkins :
https://staxmanade.com/2015/01/how-to-migrate-a-jenkins-job-to-new-jenkins-server/
https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin
https://stackoverflow.com/questions/9038748/how-do-i-copy-a-job-from-one-instance-to-another

---------- how to decrypt the password if you forgot for jenkins login -----------
https://gist.github.com/tuxfight3r/eca9442ff76649b057ab

-------------- Jenkins: Configure System ---------
To use for the below global configuration settings:
Github
SSH remote host
jira
AWS
Slack
Ant
Maven

-------------- Jenkins Global tool configuration ---------
2)JDK :
a)Slave Windows JDK 1.8.0_29
Value "E:\Java\1.8.0_29"
b)Slave Linux JDK 1.8.0_27
Value : /opt/app/jdk.18

3)Git
Git Windows 64-bit Default Install
Value : "C:\Program Files\Git\cmd\git.exe"

4)MSBuild
MSBuildName "DotNet4"
value : "C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe"
MSBuild Name : VS2013
path to MS Build : C:\Program Files (x86)\MSBuilds\12.0\Bin\amd64\MSBuild.exe

5)Ant
Ant name : Slave Windows ANT
ANT_HOME : E:\ant\1.6.5
Ant Name: Local CentOS System ANT
ANT_HOME : /usr/share/ant

6)Maven
Maven Name: Win2008 Local Slave Maven
MAVEN_HOME :e:\maven\3.2.1
Maven Name: Jenkins Maven 3.5.0
Value: select "install autoamatically" version 3.5.0

7)Nodejs
NodeJS name : NodeJS 4.0.0
install dire: E:\NodeJS\4.0.0\bin
NodeJS name : NodeJS 6.9.4
"Install autoamatically"

-------------  Configure Global Security --------------
Default port numbers for LDAP :
LDAP with secure : 636
LDAP without secure : 389

1)Security Realm:
-->Jenkins’ own user database
--> LDAP
ex:
ldaps://cdc-fcf.sea.corp.goolec.com:3269
-->Unix user/group database
2)Autherization :
-->Anyone can do anything

-->Project-based Matrix Authorization Strategy

3)API Token
Enable Agent → Master Access Control
--------------- creating a jenkins job and executing the jobs in slave node(remote node ) --------------------

1) slave node launching
https://devopscube.com/setup-slaves-on-jenkins-2/
https://linuxacademy.com/blog/devops/adding-a-jenkins-agent-node/

2)create a job for install "httpd" and restart httpd that should be running on slave node

3)Simple job execution on slavenode
Jobname: Slave-Logview
build: execute shell
cat /var/log/messages

4)Simple job Polling system running on slave node

5)Static job Github-hook integration running on slave node

6)static job with Polling system(use Organisation repo then don't push directly to master) running on slave node

7)Create a sample static website job and runt it on httpd ,then restart httpd .and try to open in browser of apache url to see the static website
create a job with Organization GitHub repo for static website

8)Create a new CICD job to notify email and delete workspace ,Discard old jobs options and also inject someparameters :
-->Click on "NewItem"

-->Under general section:
---> give the jobName as "staticwebsite-CICD"
and give the descreption
---> check on "Discard old builds" then give 30day "Days to keep builds" and also give the no.of builds
"Max # of builds to keep"
--->then choose the below option to run your job by remote "mylabelslave"
Check on "Restrict where this project can be run"  then type the label name and select
Label Expression :"mylabelslave"

-->Under "SCM":
Pulling from the GitHub account of Organization
Under SCM: select "git" then give the "staticwebsite" repo of ks-organizaation git url ex: below
https://github.com/KS-Organization/staticwebsite.git

--> Under "Build Triggers":
Enable the below option which does the your changes deploy automatically when you review and merge from Organization repo
"GitHub hook trigger for GITScm polling"

--> Under "Build Environment"
enable the option "Delete workspace before build starts"

and also enable "Inject passwords to the build as environment variables"

--->Under "Build":
select "execute shell" option and then copy and past the below shell script

#!/bin/bash

echo "#############3 Uninstall httpd ###########"
sudo yum remove -y httpd

echo "############### Install httpd ############# "
sudo yum install -y httpd

echo "######### stop httpd service ##############"
sudo service httpd stop

echo "########## removing the existing content from the below /var/www/html/* #########3"
sudo rm -rf /var/www/html/*

echo "######## copying the workspace job content to /var/www/html########## "
#sudo cp -r <yourjob-workspace>/* <destination-where-you-want-to-deploy
sudo cp -r /var/lib/jenkins/workspace/StaticWebsite-GitLocal/* /var/www/html/

echo "########### Listing the content of /var/www/html ############"
sudo ls -lrt /var/www/html/
echo "######### starting httpd service ##########"

sudo service httpd start


---> Under "Post-build Actions":
a)
Select "Email notification"  -- under "recipients"--give "knowledgeshare99@gmail.com" ---> enable "Send e-mail for every unstable build"
Note: you can give as much as you want to send email using by comma seperating
b)
select the option "Trigger Parameterized build on other projects":
"project to build" - <your-jenins-anyjob-name>,<your-onemore-job>
"Trigger when build is" - "stable"

(or)
Id doesn't work the above method(b) then please foloow the below method

Select Build Other projects --> Give the "Project to build " = "slave-LogviewerRemote" --->then enable first option "Trigger only if build is stable"

---> "Save"
--->Look at your buidls it should be deployed the build automatically by github without(afte doing the merge) manual interptions
and also you can see the output in "consoleOutput" as below
"Started by an SCM change"

9)Create a job for notifying emails
---Under SCM :
--> Select "Git"-->use anyother github project
ex: https://github.com/KS-Organization/orgrepoclass.git

---> Under "Post-build Actions":
Select "Email notification"  -- recipients "knowledgeshare99@gmail.com" --- enable "Send e-mail for every unstable build"
Note: you can give as much as you want to send email using by comma seperated

10)Create a remote job "schedule job" using poll scm and schedule a action plugging on slave node by executing


11)Deploy static web page from GitLab to Amazon S3 using Jenkins in slavenode config :
https://www.codeproject.com/Articles/1222632/%2FArticles%2F1222632%2FDeploy-static-web-page-from-GitLab-to-Amazon-S-usi

------------------------- Jenkins pipeline ----------------
1) Using the plugin "Build after other projects are built"
First create three(A,C and B) jobs —
“Majo:SamplePipeline” can ignore
A-Samplebuildjobs
B-SampleDeployJOb
 Same date and
 Under "Build Trigger" -->select “Build after other projects are built” and give the above upstream” SampleBuildJob”
C-SampleTestJob
Same date and select “Build after other projects are built” and give the above upstream” SampleDeployJob”

—in view

2)Install plugins:
—Delivery Jenkins Pipeline downgrade versions
Download  1.0.0 upload then install then see user view list
http://updates.jenkins-ci.org/download/plugins/delivery-pipeline-plugin/
after install download and uploaded then you can view when you list on “+”
— Delivery pipeline view — using this can
— Pipeline stageview
— Restart safety
— JobFilter View

Step a) SamplePipelineJob under “Delivery pipeline view“ list
Selecting three jobs
-->Under  on "Pipeline"-->click on "Add-->componets= "add” give one by one“ -->select "Initial Job" job = "SampleBuildJob" and then final job "SampleDeployJob"
Then again after “Enable start of new pipeline build” enable this to trigger “Build job” pipeline

And save then you see delivery pipeline happening in screen

After testing delivery again
“Enable rebuild” then you can see different option “rebuild” round symbol

Then you can trigger based on which job wants to build

https://jenkins.io/doc/pipeline/examples/

Step b) again enable the option “Show total build time” and selecting “theme” - contrast”
Rerun it see the screen appearing output flow with green colour with total time build

Step c) its new creation Pipeline job instead of Free style job using
Install ansicolor

—Ansicolor for pipeline script for pipeline jobs
------------------------------- Multijob pipeline deployment in jenkins ------------------------------------
First install "multijob" plugin

then create a three jobs :
1)BuildJOb
2)TestJob
3)DeployJob

Note: Please follow the steps how we used for "Deliver pipeline" adding the upstream and downstrea jobs.
--------------------------How to setup Build Pipeline in Jenkins job flow ------------------
1)First install "Build pipeline plugin"

then create a three jobs :
1)BuildJOb
2)TestJob
3)DeployJob

Under --> All+ --> just click on "+" then you can see "Build Pipeline View"

a)—Under “Build Pipeline View” option give job name as “MyBuildFlowPipeline-Jobs”
Then select initial job “Buildjob”
And save ,see the output
Note: Options can be kept default options

B)select again “No Of Displayed Builds” give "5" and save ,see output

C)Under “BuildPipeline” screen just click on “run“ option and observer scree build flow only after other deploying .

D) under Console Output Link Style” see option 1-LightBox, 2-newWindow ,3-This window. ,,,observer scree outputs windows each

E) observer click on “Re-Run “ options

--------------- How to setup "Delivery Pipeline" flow jobs -------------

Once this is done do it for same above three jobs using "Delivery Pipeline"
--Install pipeline then select All+ --click on "+" option and give the name of "Delivery Pipeline"
-->Map all the options as
-------------------------------How to setup BlueOcean  in Jenkins job flow ------------------------------------
Def:its a new user interface for jerkins and provides and interactive view of jenkins pipeline (and jobs ).
BO is available for jenkins ver 2.70 or above

—install Blue ocean plugin under manager plugins .
While installing it shows the error “java.io.IOException: Bitbucket Pipeline for Blue Ocean v1.2.0 failed to load.”
So download the later Blue ocean plugin …
— now click on “ Open Blue Ocean” on jenkins homepage then it diverting to “Blue Ocean” screen
— ON Blue ocean scree you can able to see jobs and rerun if requires and see output click on
— its called “Jenkins Blue Ocean UI “
— You can switch between “classic view and “Blue ocean view “

---------------- How to create a maven compilation job in jenkins ---------------------
Plugins required to build the Maven jobs :
Discard Old Build plugin
Email-Notifiaction
slacknotification
Parameterized Trigger plugin
TestNG Results Plugin
git
Maven
Multijob


------------------Sample  Ex: maven github jobs: in Realtime under "Build Execute shell"------------

Under Build:Execute
export JAVA_HOME_1_7=/usr/java/jdk1.7.0_45
export PATH=$JAVA_HOME_1_7/bin:$MAVEN_HOME/bin:$PATH
export MAVEN_OPTS="-Xms512m -Xmx512m -XX:MaxPermSize=256m"

mvn ${mvn_tasks}

echo "--------------------------------------------------------------"
echo "Copying artifacts to ORS"
echo "--------------------------------------------------------------"
export ORS_DIR=/nfs-builds/retouch-builds/github-${BRANCH}-maven/$BUILD_NUMBER
mkdir -p $ORS_DIR/Logs
pushd retouch-agent-tools-ui/ui/target
cp *_widget.zip* ../../../artifacts/config/
pushd ../../../artifacts
#pushd artifacts

for dn in wars config; do
  pushd $dn
  for fn in *; do
    cp $fn $ORS_DIR/$fn
  done
  popd
done
popd
echo $CHANGES > $ORS_DIR/Logs/changes.txt

======================================================================================================
                             Build and release tools  :Maven,Ant and Gradle
====================================================================================================== ,
• Ant
o What is Ant ? why need it ?
o Explain about ant build.xml strucutre

• Gradle

• Nexus Artifact Repository

• Apache-Maven
o About Maven
o Installation and configuration
o Maven settings
o Project structure
o What is POM ? its structure ?

------ About ANT ----------------
http://www.softwaretestinghelp.com/apache-ant-selenium-tutorial-23/
http://www.vogella.com/tutorials/ApacheAnt/article.html

About Build.xml build in ANT :
Ant uses an xml file for its configuration. The default file name is build.xml . Ant builds are based on three blocks: tasks, targets and extension points. A task is a unit of work which should be performed and constitutes of small atomic steps, for example compile source code or create Javadoc

https://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html
https://ant.apache.org/manual/using.html

-------------------- About Maven ------------------
https://career.guru99.com/top-20-maven-interview-questions/

About POM.xml ?
https://maven.apache.org/guides/introduction/introduction-to-the-pom.html

------------- Maven project usage -------------------
https://maven.apache.org/plugins/maven-war-plugin/usage.html

--------------- Installation Maven --------------------------------
http://www.itcuties.com/tools/jenkins-installation-and-configuration-with-maven-ant-and-github/#jenkins-maven-ant-and-git-configuration

Just downloading binary package installed
https://stackoverflow.com/questions/12076326/how-to-install-maven2-on-redhat-linux

First way : is good to learn
wget http://mirror.olnevhost.net/pub/apache/maven/binaries/apache-maven-3.2.1-bin.tar.gz
And then proceed to install it.

UPDATE: Adding complete instructions (copied from the comment below)

Run command above from the dir you want to extract maven to (e.g. /usr/local/apache-maven)
run the following to extract the tar:
tar xvf apache-maven-3.2.1-bin.tar.gz
Next add the env varibles such as

$mv apache-maven-3.2.1 apache-maven
bash-4.2$ sudo chown jenkins:jenkins apache-maven

then add the below environment variables :

export M2_HOME=/usr/local/apache-maven/
export M2=$M2_HOME/bin
export PATH=$M2:$PATH

Verify maven version:
mvn -version

Or

---------2nd way :is best way to follow than 1st way) the installation steps for Maven :

#sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
#sudo sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
#sudo yum install -y apache-maven
#mvn --version
[root@ip-10-0-1-162 ec2-user]# mvn --version
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)
Maven home: /usr/share/apache-maven
Java version: 1.8.0_191, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-0.amzn2.x86_64/jre
Default locale: en_US, platform encoding: ANSI_X3.4-1968
OS name: "linux", version: "4.14.77-81.59.amzn2.x86_64", arch: "amd64", family: "unix"


============== Sample maven jenkins job =================================
https://github.com/KS-Organization/simple-restful-file-storage.git

1)
--->Click on "New Item" --->>then give the Jobname "Maven_Job-Java1"

--->Under SCM:
Github link under SCM "https://github.com/KS-Organization/simple-restful-file-storage.git"
--->Under Build:
Select --"Toplevel Maven Targer --->then select the following options what you see
Maven : LocalMaven
Goals:compile

Job failes due to dependencies issue versions:
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project camel-spring4: Fatal error compiling: tools.jar not found: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-0.amzn2.x86_64/jre/../lib/tools.jar -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, pl

Solution :
you have to map the maven version -2.2 (globale configuration and keep install automatically)
then after come back and map the maven-job to "M2_Local" then "rebuild ""

Note: Java also must be set as global environment variable

Issue for java :
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Fatal error compiling

Embedded error: tools.jar not found: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-0.amzn2.x86_64/jre/../lib/tools.jar
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 20 seconds

Solution :
I set the JDK in job configuariont to choose "JDK_1.80"(which is set "install automaticall" in global tool configuration)
b)rebuild last one which got success



c)Some realtime issue :

For fixing the below issue :
[INFO] ------------------------------------------------------------------------
[ERROR] Plugin org.apache.maven.plugins:maven-resources-plugin:2.6 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-resources-plugin:jar:2.6: Could not transfer artifact org.apache.maven.plugins:maven-resources-plugin:pom:2.6 from/to apache.releases (https://repository.apache.org/content/repositories/releases/): /home/jenkins/.m2/repository/org/apache/maven/plugins/maven-resources-plugin/2.6/maven-resources-plugin-2.6.pom.part.lock (No such file or directory) -> [Help 1]
[ERROR]

Solution : /home/jenkins/.m2  under jenkins user
bash-4.2$ sudo chown -R jenkins:jenkins /home/jenkins/.m2
bash-4.2$ ls -la
total 0
drwxr-xr-x. 4 jenkins jenkins 29 Nov 22 14:29 .
drwxr-xr-x. 7 jenkins jenkins 75 Nov 15 15:00 ..
drwxr-xr-x. 3 jenkins jenkins 24 Nov 22 14:29 .m2
drwx------. 2 jenkins jenkins 57 Nov 18 14:48 .ssh
bash-4.2$ pwd
/home/jenkins
bash-4.2$ id
uid=1004(jenkins) gid=1004(jenkins) groups=1004(jenkins) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
bash-4.2$

========= Realtime scenarios :build jobs integration with Ansible and Jenkins,github ===============

1)how to integrate sample job with Jenkins and ansible running a simple playbook

2) with GitHub and maven compile job
http://www.itcuties.com/tools/jenkins-installation-and-configuration-with-maven-ant-and-github/#jenkins-maven-ant-and-git-configuration

Steps to follow the above project url:
First give the job name as "maven_java-githu" then go to :git path my https://github.com/KS-Organization/Axis-2-client.git
then select under ”build then select “ invoke -top maven level “
then selct maven location "Maven_Local2"
Then give the maven goal:compile
Then POM: "HighScoresServiceClient/pom.xml"
then save it and click "build"

Note:Before this maven path set in Global tool configure


3)With local maven compile project
Steps: job name

Under build : involve into maven
Then give the project local maven pom.xml path of master or slave
Complile
/opt/app/apache-maven/

Before this clone the above project into the above location then do it

4) Gradle maven and GitHub

A) type
https://oliverveits.wordpress.com/2016/12/09/getting-started-with-jenkins-part-2-automated-job-hello-world/

B) type
http://www.bogotobogo.com/DevOps/Jenkins/Jenkins_GitHub_Java_Application_Project_Build_Configuration_Maven.php



--------------------------------- Gtihub_LocalMaven _Slave Job ---------------------------------

https://github.com/KS-Organization/simple-restful-file-storage.git

a)Jobname --->Gtihub_LocalMaven _Slave
---> Github link udner SCM "https://github.com/KS-Organization/simple-restful-file-storage.git"
--->use the correct branch
—>select JDK “System”
--> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
Build "Toplevel Maven Targer --->
Maven : LocalMaven
Goals:compile
Save and apply ..

Build issues during the above job:

https://stackoverflow.com/questions/19722058/where-to-get-the-tools-jar-to-use-with-the-java-8-jdk-early-release
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:compile (default-compile) on project camel-spring4: Fatal error compiling: tools.jar not found: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64/jre/../lib/tools.jar -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
Build step 'Invoke top-level Maven targets' marked build as failure
Finished: FAILURE


Solution : on RHEL 7.4 if jdk1.8u151 installed then you need to install devel package then rerun it got success
# yum install java-1.8.0-openjdk-devel

------------------------------  Github_GradleMaven_Slave  -----------------------------------
https://www.vultr.com/docs/how-to-install-gradle-on-ubuntu-16-10

https://oliverveits.wordpress.com/2016/12/09/getting-started-with-jenkins-part-2-automated-job-hello-world/
Job: Github_GradleMaven_Slave
       --> click on "New Item" -- select using "Free style job"
        --> Job name: "Github_GradleMaven_Slave" and give the description
        --> select "Discard Old builds " --> under "Days to keep builds" = "90" and "Max # of builds to keep" = "30"
        --> select "Execute concurrent builds" if necessary and JDK = "JDK-1.8-192"
        --> git scm : https://github.com/KS-Organization/simple-restful-file-storage.git
        --> Build trigger: select  "Build after other projects are built" -- "Projects to watch" --- give the previous job name "mvn_compile" --Enable "Trigger only if build is stable"
        --> Build Environment: select " delete workspace before build"
        --> Build : select "Invoke Top-level-maven targets" --> Maven version "Local-Maven" and goals - "clean compile"
                    select "Invoke Gradle Script" --> Invoke Gradle --> "Gradle version" "Local-Gradle" and Tasks= "jar"
        --> Post-BuildAction:
                              select Email Notification -- give "your-gmailid" to send build notification alerts
        --> save and click on "build now"

----------------------------- Maven_WebApp_TomcatAutodeploy --------------------------------
https://www.mkyong.com/maven/how-to-create-a-web-application-project-with-maven/
http://www-eu.apache.org/dist/tomcat/tomcat-7/v7.0.82/bin/apache-tomcat-7.0.82.tar.gz
https://www.jdev.it/deploying-your-war-file-from-jenkins-to-tomcat/
Installed plugin:

Deploy to container Plugin
http://paxcel.net/blog/automation-of-warear-deployment-using-jenkins/


---------- Jenkins CICD ---------
Jenkins Pipeline for Continuous Delivery and Deployment:
https://dzone.com/articles/starting-automation-testing-from-scratch-here-is-w

------------Jenkins CICD:Using CICD Pipeline - Maven Build job,Maven TestJob and Deploy Tomcat job -------
Building a Continuous Delivery Pipeline Using Jenkins:the best example
https://dzone.com/articles/building-a-continuous-delivery-pipeline-using-jenk

Create three jobs under "Build Pipeline view" : as above using guidelines
The below three jobs should run on Slave node only :
1)mvn_compile
--> click on "New Item" under "Build Pipeline view" -- select using "Free style job"
--> Job name: mvn_compile and give the description
--> select "Discard Old builds " --> under "Days to keep builds" = "90" and "Max # of builds to keep" = "30"
--> select Execute concurrent builds if necessary and JDK "JDK-1.8-192"
--> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
--> git scm : https://github.com/KS-Organization/game-of-life.git
--> Build trigger: select "Poll SCM" -- H/15 * * * *
--> Build Environment: select " delete workspace before build "
--> Build : select "Invoke Top-level-maven targets" ---> Maven version "Local-Maven"--> goals "compile"
--> PostBuildAction: select Email Notication -- give "your-gmailid" to send build notification alerts
--> save and click on "build now"
2)mvn_test:
--> click on "New Item" -- select using "Free style job"
--> Job name: mvn_test and give the description
--> select "Discard Old builds " --> under "Days to keep builds" = "90" and "Max # of builds to keep" = "30"
--> select "Execute concurrent builds" if necessary and JDK = "JDK-1.8-192"
--> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
--> git scm : https://github.com/KS-Organization/game-of-life.git
--> Build trigger: select  "Build after other projects are built" -- "Projects to watch" --- give the previous job name "mvn_compile" --Enable "Trigger only if build is stable"
--> Build Environment: select " delete workspace before build"
--> Build : select "Invoke Top-level-maven targets" --> Maven version "Local-Maven" and goals - "test"
--> Post-BuildAction: Select "Publish Junit test result report" -->
                      select "Test Report XMLs" =  "**/target/surefire-reports/*.xml"
--->Post-BuildAction: select Email Notification -- give "your-gmailid" to send build notification alerts
--> save and click on "build now"

3)mvn_package_deploy:
--> click on "New Item" under "Build Pipeline view" -- select using "Free style job"
--> Job name: "mvn_package_deploy" and give the description
--> select "Discard Old builds " --> under "Days to keep builds" = "90" and "Max # of builds to keep" = "30"
--> select "Execute concurrent builds" if necessary and JDK = "JDK-1.8-192"
--> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
--> git SCM : https://github.com/KS-Organization/game-of-life.git
--> Build trigger: select  "Build after other projects are built" -- "Projects to watch" --- give the previous job name "mvn_test" -- select "Trigger only if build is stable"
--> Build Environment: select "delete workspace before build"
--> Build : select "Invoke Top-level-maven targets" --> Maven version "Local-Maven" and goals - "package"
--> Build : select "Execute Shell" then copy and past the below shell script to deploy the *.war into tomcat
Build Shell:
#mvn package

#Maven should not install manual on any slave nodes.it installs by default through "Global tool configuratoin Maven Auot install Option"
#sudo yum install tomcat
#sudo service tomcat start
cd $workspace
sudo /usr/local/tomcat/bin/shutdown.sh
sudo cp -r /home/jenkins/workspace/GameOfLife-mvnPackageManualTomcat/gameoflife-web/target/*.war /usr/local/tomcat/webapps/
sudo chown -R tomcat:tomcat /usr/local/tomcat
sudo /usr/local/tomcat/bin/startup.sh
echo "####### Tomcat Status ############"
sudo ps -ef|grep tomcat
sudo echo "########## Tomcat WebApp directory listing of deployed app.war"
sudo ls -lrt /usr/local/tomcat/webapps/*
sudo echo "######### Deployment completed #########"

--> Post-BuildAction: select Email Notification -- give "your-gmailid" to send build notification alerts
--> save and click on "build now"

4) Test your deployed .war app in browser
http://<pub-ip>:8080/gameoflife-web
http://18.237.250.113:8080/gameoflife/

------------------- Maven Build,test, and Deploy using game-of-life java code configured on both master and slave ----------------
Follow the instructions in given link below to configure the steps :
https://dzone.com/articles/building-a-continuous-delivery-pipeline-using-jenk

https://github.com/KS-Organization/game-of-life.git
1)Job name:Maven_Game-Of-Life-Master
 ----->> Restrict where this job can be run : slavenode
 ----->> Under SCM : git URL "https://github.com/KS-Organization/game-of-life.git"
 --> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
 ----- Under Build: "Invoke Top level maven targets" -->Maven Version: LocalMaven ---> Goals: package
 ----- Uder Buil : Execute Shell -->Give the below script info
Build Shell:
#sudo yum install tomcat
#sudo service tomcat start
cd $workspace
#mvn package

#Maven should not install manual on any slave nodes.it installs by default through "Global tool configuratoin Maven Auot install Option"
#sudo yum install tomcat
#sudo service tomcat start
cd $workspace
sudo /usr/local/tomcat/bin/shutdown.sh
sudo cp -r /home/jenkins/workspace/GameOfLife-mvnPackageManualTomcat/gameoflife-web/target/*.war /usr/local/tomcat/webapps/
sudo chown -R tomcat:tomcat /usr/local/tomcat
sudo /usr/local/tomcat/bin/startup.sh
echo "####### Tomcat Status ############"
sudo ps -ef|grep tomcat
sudo echo "########## Tomcat WebApp directory listing of deployed app.war"
sudo ls -lrt /usr/local/tomcat/webapps/*
sudo echo "######### Deployment completed #########"

 ----- Under :Post Build action : select "Publish JUnittest result"
 Test Report XMLs "**/target/surefire-reports/*.xml"

Testing in Browser after :
http://18.237.250.113:8080/gameoflife/

2)Job :
Job name:Maven_Game-Of-Life-Slave
follow the above same steps but choose option "Restrict where this job can be run : slavenode"

-------------------- Maven_Github_TomcatDeployManual ---------------------------------
a)Job name:Maven_Github_TomcatDeployManualSalve
--> select "Discard Old builds " --> under "Days to keep builds" = "90" and "Max # of builds to keep" = "30"
--> select "Execute concurrent builds" if necessary and JDK = "JDK-1.8-192"
--> Select "Restrict where this project can be run" -- "Label Expression" = <Myslavenode>
--> Under SCM : git URL "https://github.com/KS-Organization/Maven_CounterWebApp.git"
--> Under Build: "Invoke Top level maven targets" -->Maven Version: LocalMaven ---> Goals: clean compile package
--> Uder Buil : Execute Shell -->Give the below script info
Build Shell:
cd ${WORKSPACE}
sudo pwd
echo "########### Tomcat Stopping ###########"
sudo /usr/local/tomcat/bin/shutdown.sh
echo "########### Copy .war file to Webapps dir  ###########"

sudo cp -r /home/jenkins/workspace/Maven_CounterWebSlaveTomcat/target/*.war /usr/local/tomcat/webapps/
echo "########### Changing the Ownership for webapps folder  ###########"
sudo chown -R tomcat:tomcat /usr/local/tomcat/webapps/CounterWebApp*
echo "########### Tomcat Start ###########"
sudo /usr/local/tomcat/bin/startup.sh sleep 30;
echo "########### Tomcat WebApps listing ###########"

sudo ls -lrt /usr/local/tomcat/webapps/*

echo "########### CounterWeb Apps Deploy completed ###########"

#sudo echo " ========================= CounterWebApp Launching ==============================
#sudo wget http://54.164.194.138:8080/CounterWebApp/

--> Post-BuildAction: select Email Notification -- give "your-gmailid" to send build notification alerts
--> save and click on "build now"

4)Test this deploy app in browser
http://18.237.250.113:8080/CounterWebApp/

------------------------------------------------------------------------------
How to deploy maven based .war app in to tomcat ?

https://www.mkyong.com/maven/how-to-deploy-maven-based-war-file-to-tomcat/

CI jenkins build with maven ?
http://www.vogella.com/tutorials/Jenkins/article.html#jenkins-backup-and-copying-files


-------------- difference between apache maven and ant -------------------
http://www.differencebetween.net/technology/software-technology/difference-between-ant-and-maven/

https://www.javatpoint.com/difference-between-ant-and-maven

-------------- Jenkins Scripted pipeline vs declarative pipeline ------------
https://www.blazemeter.com/blog/how-to-use-the-jenkins-scripted-pipeline
https://stackoverflow.com/questions/43484979/jenkins-scripted-pipeline-or-declarative-pipeline

https://www.blazemeter.com/blog/how-to-use-the-jenkins-declarative-pipeline
https://support.cloudbees.com/hc/en-us/articles/115003908372-Main-differences-between-Freestyle-Scripted-Pipeline-Job-Declarative-Pipeline-Job

Best Explain:
https://www.guru99.com/jenkins-pipeline-tutorial.html

Scripted Pipeline :
https://dzone.com/articles/how-to-use-the-jenkins-scripted-pipeline


Using Groovy Script(Jenkinsfile):
https://wilsonmar.github.io/jenkins2-pipeline/
Using Jenkins file :
https://jenkins.io/doc/pipeline/tour/hello-world/


------------- ThinBackup plugin in jenkins uses ----------
Plugin : ThinBackup
also
Use "Metrics Disk Usage" plugin to see the utilisation report of

Well Explained:
https://www.studytonight.com/jenkins/backup-management
https://devopscube.com/jenkins-backup-data-configurations/
How To Automate EBS Snapshot Creation And Deletion Using Lambda
https://devopscube.com/automate-ebs-snapshot-creation-deletion/


====================================================================================================
                                 Docker and Vagrant Containers tools
====================================================================================================
---------------------------------------------------------------------------
                               Docker– Containers.
---------------------------------------------------------------------------
• Introduction
o What is a Docker
o Use case of Docker
o Platforms for Docker
o Dockers vs. Virtualization
• Architecture

o Docker Architecture.
o Understanding the Docker components
• Installation
o Installing Docker on Linux.
o Understanding Installation of Docker on windows.
o Some Docker commands.
o Provisioning
• Docker Hub
o Downloading Docker images.
o Uploading the images in Docker Registry and AWS ECS
o Understanding the containers
o Running commands in container.
o Running multiple containers.
• Custom images
o Creating a custom image.
o Running a container from the custom image.
o Publishing the custom image.
• Docker Networking
o Accessing containers
o Linking containers
o Exposing container ports
o Container Routing
• Docker Compose
o Installing The Docker compose
o Terminology in Docker compose
o Build word press site using Docker compose

------------------what is docker ? -------------------
Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications, whether on laptops, data center VMs, or the cloud.

---------------- use case of docker -----------------
https://www.airpair.com/docker/posts/8-proven-real-world-ways-to-use-docker
1. Simplifying Configuration
2. Code Pipeline Management : Consistent and testable application from development to testing to staging to production:
3. Developer Productivity:Quicker developer onboarding onto projects:
4. App Isolation
5. Server Consolidation :Safely run legacy and new apps on the same server:
6. Debugging Capabilities
7. Easier management of horizontal scalability and elasticity: It makes it very easy and fast to start new containers on remote boxes using automation tools such as Ansible/Chef/Puppet etc.
8. Rapid Deployment

Majore points:
its all about speed of the work .
--Develop faster
--Build faster
--Test Faster
--Deploy faster
--Update  faster
--Recover faster
--Containers reduces the complexity



----------------- platforms for docker --------------
Docker can be integrated into various infrastructure tools, including Amazon Web Services, Ansible, CFEngine, Chef, Google Cloud Platform, IBM Bluemix, HPE Helion Stackato, Jelastic, Jenkins, Kubernetes, Microsoft Azure, OpenStack Nova, OpenSVC, Oracle Container Cloud Service, Puppet, Salt, Vagrant, and VMware vSphere

---------- docker vs virtualiation ------------------------
https://docs.docker.com/get-started/#containers-vs-virtual-machines
https://docs.docker.com/get-started/#images-and-containers
https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-normal-virtual-machine
https://blog.netapp.com/blogs/containers-vs-vms/
https://monkeyvault.net/docker-vs-virtualization/

---------- Architecture of docker and understanding  -------------------------------------------
About complete Docker and Archi ?
https://docs.docker.com/engine/docker-overview/#docker-architecture

-------------- installation of docker -----------------------
Installation docker on linux ?
https://docs.docker.com/machine/install-machine/
https://docs.docker.com/engine/installation/#server
https://runnable.com/docker/install-docker-on-linux

Understanding of installation on windows ?
https://docs.docker.com/docker-for-windows/
https://docs.docker.com/docker-for-windows/install/

List some docker commands ?
https://docs.docker.com/engine/reference/commandline/docker/
https://afourtech.com/guide-docker-commands-examples/
https://blog.pavelsklenar.com/10-useful-docker-commands-tip-tricks/
https://docs.docker.com/engine/reference/commandline/cli/

Provisioning docker?
https://docs.docker.com/machine/reference/provision/
https://gist.github.com/maxivak/167e46b3570a834231be7bbeefe9243a
https://docs.docker.com/machine/get-started-cloud/
Ex:
https://github.com/KS-Organization/chef-provisioning-docker
Provisioning EC2 instance on AWS using docker-machine ?
For AWS EC2, this command creates an instance called “aws-sandbox”:
$ docker-machine create --driver amazonec2 --amazonec2-access-key AKI******* --amazonec2-secret-key 8T93C*******  aws-sandbox
ex:
$ docker-machine create --driver amazonec2 --amazonec2-access-key AKIAJLFYQEJD3EGA --amazonec2-secret-key 23jjVB7B34RYCKsqyATkfjMes  aws-sandbox


------------- About Dockerfile ----------------
https://www.howtoforge.com/tutorial/how-to-create-docker-images-with-dockerfile/
http://odewahn.github.io/docker-jumpstart/building-images-with-dockerfiles.html

--------------------- Docker hub ------------------------
About docker hubbbb ? and overview ?
https://docs.docker.com/docker-hub/repos/
https://docs.docker.com/docker-hub/

Downloading docker images ?
https://docs.docker.com/engine/reference/commandline/pull/#options
https://serverfault.com/questions/701248/downloading-docker-image-for-transfer-to-non-internet-connected-machine

Uploading the docker images into docker registry and cloud ?
https://docs.docker.com/engine/reference/commandline/push/
https://docs.docker.com/docker-cloud/builds/push-images/
https://docs.docker.com/datacenter/dtr/2.4/guides/user/manage-images/pull-and-push-images/

how to push docker image into private repo ?
https://stackoverflow.com/questions/28349392/how-to-push-a-docker-image-to-a-private-repository

Understanding containers ?
https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/
https://docs.docker.com/engine/userguide/networking/default_network/container-communication/

Running commands in docker containers ?
https://docs.docker.com/engine/reference/commandline/exec/
https://docs.docker.com/engine/reference/commandline/container_exec/
https://docs.docker.com/engine/reference/commandline/run/


Running multiple docker containers ?
http://tiborsimko.org/docker-running-multiple-processes.html
https://docs.docker.com/engine/admin/multi-service_container/

--------------------------- Custom images --------------------------------------
Creating a custom image ?
https://docs.docker.com/get-started/#setup
https://www.linux.com/learn/how-build-your-own-custom-docker-images
https://deis.com/blog/2015/creating-sharing-first-docker-image/


------------- Running a container from custom images -----------------
https://stackoverflow.com/questions/18497688/run-a-docker-image-as-a-container
https://circleci.com/docs/2.0/custom-images/
https://docs.docker.com/engine/reference/run/#detached--d

--- publishing the custom image -----------
https://www.howtoforge.com/tutorial/building-and-publishing-custom-docker-images/
https://docs.docker.com/docker-cloud/builds/push-images/
https://docs.docker.com/engine/reference/commandline/push/

------------ Docker network --------------------
About docker network ?
https://docs.docker.com/engine/reference/commandline/network/
https://docs.docker.com/engine/userguide/networking/
network commands:
https://docs.docker.com/engine/userguide/networking/work-with-networks/
https://docs.docker.com/engine/tutorials/networkingcontainers/

4ways stop connect a docker container to local network ?
http://blog.oddbit.com/2014/08/11/four-ways-to-connect-a-docker/

--------------- docker compose ----------------
Overveiw ?
https://docs.docker.com/compose/overview/
https://docs.docker.com/compose/
installing compose ?
https://docs.docker.com/compose/gettingstarted/

terminology in docker ?
Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application's services. Then, with a single command, you create and start all the services from your configuration

https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/container-docker-introduction/docker-terminology

build a wordpress site using docker compose ?
https://docs.docker.com/compose/wordpress/
https://www.upcloud.com/support/deploy-wordpress-with-docker-compose/

How to deploy springboot app or install tomcat using docker ?

#docker pull tomcat
To run the pull images :
#nohup docker run -p 8081:8080 tomcat $
Test the installed container of tomcat in Browser:
http://<publ-ip>8081/
#docker pull ninrod/springboot
nohup docker run -p 8081:8080 ninrod/springboot $
To see docker process/Container IDS
#docker ps
#docker ps -a (Even it displays stopped services)
#docker stat (statics shows )
#docker top (To see the utilizatio of docker service how much utilizing and free )

Whole Docker Udemy :
https://github.com/BretFisher/udemy-docker-mastery

================================================================================
                               Vagrant
================================================================================
Introduction
o Why and what is Vagrant
o Uses of Vagrant in an environment
o Alternatives of Vagrant
o Vagrant versions
• Installation and Configuration
• Installing Virtual box
• How to install Vagrant on Windows and Linux
• Configuring Vagrant
• Provisioning with Vagrant
• Creating first VM with Vagrant
• Operations on the VM
• Connecting to the VM
• Add required Images to Vagrant
• Creating network and port forwarding using Vagrant
• Running Chef-Cookbooks on Vagrant
• Executing wrapper-cookbooks on Vagrant
---------------- about vagrant -----------------------

Vagrant is a tool for building complete development/Infrastructure environments. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases development/production parity, and makes the “works on my machine” excuse a relic of the past.
The basic idea around Vagrant is to create a directory on your local machine that serves as a “home” for a special Vagrantfile (this particular file has no extension). The Vagrantfile is all Ruby and accepts a number of parameters to help configure and provision your Vagrantbox for some fast, on-the-fly, instant gratification we’re all accustomed to here in the 21st century.
It’s worth noting that Vagrant deals directly with VirtualBox but works with other virtualization programs, too. For me, I’ll more than likely stick with VirtualBox as it’s free. And free is generally good in my book.

Light defining ?

I've been using Vagrant for about 5-6 years now to automate the setup of development environments. It was a great tool for spinning up environments that were similar to production and easily shared across team resources that jump in and out of projects.
The number of issues we're dealing with daily with Vagrant is rising. The productivity boost it provided is entirely gone and the support is taking a substantial amount of time.

We love Hashicorp and, I don't mean this to be a slight against them, but I'm curious what alternatives people are using to:

- Automate building dev environments (Linux-based) with dependencies etc. - Ensure that your development environment is similar enough to production to reduce/eliminate potential issues moving to production.

I have done some googling around, but it still appears that Vagrant is the top dog in this space. Willing to accept that it's us and not the tool, but issues with NFS sharing, port collisions, support for Fusion, deprecations with legacy Chef setups and more is just more than we can handle right now.

---------------- vagrant tools links url and samples ---------------------
—————— Vagrant installation and configuration URL ————————————
Downloads –
Vagrant - https://www.vagrantup.com/downloads.html
ChefDK -https://downloads.chef.io/chefdk/1.1.16
Virtualbox -https://www.virtualbox.org/wiki/Downloads
Vmware Fusion - https://my.vmware.com/web/vmware/info?slug=desktop_end_user_computing/vmware_fusion/8_0
Implemetations –
https://www.vagrantup.com/docs/getting-started/
Vagrant adding box –
vagrant box add hashicorp/precise64
Vagrant required plugins –
            Vagrant plugin install vagrant-omnibus
            Vagrant plugin install vagrant-vmware-fusion
            vagrant plugin license vagrant-vmware-fusion  ~/license.lic
 
https://docs.chef.io/provisioning.html
gem install chef-provisioning chef-provisioning-vagrant
chef-client  -z recipes/vagrant_setup.rb
knife cookbook download site <<cookbook name>>
knife cookbook create <<cookbook name>>
knife role create
knife data-bag create
knife bootstrap
https://github.com/chef/chef-provisioning
https://github.com/KS-Organization/class-chef-repo.git
https://github.com/mitchellh/vagrant-aws
https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Boxes

--------------- vagrant commands ----------------
a Vagrant file: this tells Vagrant what hardware to spin up
a provisioning file: this tells Vagrant what to do on the machine

$vangrant -v
$vangran up
$vagrant halt
$vagrant shutdown
$vagrant halt :it keeps starting stage

$vagrant ssh
$vagrant
------------- vagrant --------------------
https://www.nodalpoint.com/devops-ansible-oracle-database-oraclelinux-7-vagrant/
Why and what is Vagrant?
https://24ways.org/2014/what-is-vagrant-and-why-should-i-care/
what :
You already know what virtualisation is. You use the ability to run an operating system within another operating system every day. Whether that’s Parallels or VMware on your laptop or similar server-based tools that drive the ‘cloud’, squeezing lots of machines on to physical hardware and making it really easy to copy servers and even clusters of servers from one place to another. It’s an amazing technology which has changed the face of the internet over the past fifteen years.

why:
The business case involves saved time, a very low barrier to entry and the ability to give the exact same environment to somebody else.

Use procs:Alternattive to vagrant :
--Vagrant uses virtualbox as the virtualization layer, so you can start a vagrant vm using the gui. Add the following to your VagrantFile.
config.vm.boot_mode = :gui
lets you treat it more like a sandbox with quick rollbacks, etc

--I'm not sure there is an alternative. Vagrant is a relatively new software. Problems with ssh on Vagrant seems to appear when virtualbox addons version on the VM is different from the Virtualbox version on the host machine, and I'm not sure there is a solution apart from reinstalling correct versions.
edit virtualbox addons are named VirtualBox Guest Additions

-- Add "config.ssh.forward_x11 = true" to your Vagrantfile then you can easily use X-Windows.
-- compare to all Docker,kubernet,fig ,
https://alternativeto.net/software/vagrant/


------------- Why should I use Vagrant instead of just VirtualBox?---------------------
https://superuser.com/questions/584100/why-should-i-use-vagrant-instead-of-just-virtualbox

======================================================================================================
                             Monitoring tools:
======================================================================================================
NewRelic, Nagios,AppDynamics,NewRelic,DataDog,Dynatrace,Splunk,NetGenie, HP-SiteScope,PagerDuty
• Introduction

• About Monitoring tools
Monitoring tools are used to continuously keep track of the status of the system in use, in order to have the earliest warning of failures, defects or problems and to improve them.
There are monitoring tools for servers, networks, databases, security, performance, website and internet usage, and applications.

• Configuration with Ops tools
--------------• Log management: Splunk------------------
Log management is the collective processes and policies used to administer and facilitate the generation, transmission, analysis, storage, archiving and ultimate disposal of the large volumes of log data created within an information system.
A log, in a computing context, is the automatically produced and time-stamped documentation of events relevant to a particular system. Virtually all software applications and systems produce log files
Log management software automates many of the processes involved. An event log manager (ELM), for example, tracks changes in an organization's IT infrastructure. These changes are reflected in audit trails that must be produced for a compliance audit.
Log mgmt :
https://www.comparitech.com/net-admin/log-management-tools/

Ex: Splunk Log Mgmt :
what is spunk ? Use of Splunk ? Start/stop/restart ?
https://docs.splunk.com/Documentation/Splunk/7.2.3/Admin/StartSplunk

What are main configuration files in Splunk ?
Most important files are inputs.conf and outputs.conf
/<base_spounkHom/etc/local/ or /default
For more configuration files .please refer
https://docs.splunk.com/Documentation/Splunk/7.2.3/Admin/Listofconfigurationfiles


----------------• Installing and Configuring Monitoring tool:Nagios ----------
:Ex: nagios,Logstash,Kibana,Zobix

1)Nagios:
Nagios installation and configuration steps on master :
step1 ) install Nagio and nagios plugin both on Master server
step2 ) Browse the url http://<ip>/nagios
step3 ) Install Nagios plugin on Remote machine and integrate to Nagios master server
Use the below URL for reference to implement about steps  :
https://www.tecmint.com/install-nagios-in-linux/
https://www.digitalocean.com/community/tutorials/how-to-install-nagios-4-and-monitor-your-servers-on-centos-7

On remote : Nagio Plugin installation :
https://www.itzgeek.com/how-tos/linux/centos-how-tos/monitor-remote-linux-system-with-nagios-3.html

Step1)
[root@ip-10-0-2-151 log]# yum install -y httpd httpd-tools php gcc glibc glibc-common gd gd-devel make net-snmp

step2)
Create a user :
[root@ip-10-0-2-151 log]# useradd nagios
Create a group:
[root@ip-10-0-2-151 log]# groupadd nagcmd

User mode changes:
[root@ip-10-0-2-151 log]# usermod -G nagcmd nagios
Incase if installed/monitoring Apache:
[root@ip-10-0-2-151 log]# usermod -G nagcmd apache

Step3) Download the rpm package on remote machine
[root@ip-10-0-2-151 log]# rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

step4)Install nagios plugin on remote
[root@ip-10-0-2-151 log]# ./configure --with-nagios-user=nagios --with-nagios-group=nagios

[root@ip-10-0-2-151 log]# make

[root@ip-10-0-2-151 log]# make install

Step 5)Add the System commands to monirots
[root@ip-10-0-2-151 log]# vi /etc/nagios/nrpe.cfg
add this comment on this file
allowed_hosts=127.0.0.1,192.168.12.10

Step6) Restart NRPE:
[root@ip-10-0-2-151 log]# systemctl start nrpe
[root@ip-10-0-2-151 log]# systemctl enable nrpe

step7)Come back into Nagios master server then reolad the services
#service nagios reload

• Application Monitoring using tools
• Server Monitoring using tools
• Creating alerts
• Alerts policies


----------------------- PagerDuty Training: ------------------------
What is PagerDuty?
PagerDuty is a SaaS based service used for event/incident alerting, signal identification and orchestration, on-call management and notification, key SLA measures such as Mean Time To Acknowledge (MTTA), Mean Time To Repair (MTTR), Incident Intelligence and Analysis. The most predominate case for PagerDuty is paging to deliver production alerts with efficacy and ease of maintenance.
In order to meet SLAs, business must have quick resolution to production issues. PagerDuty offers repeat notifications, alert deduplication/suppression, plugins to popular communication channels such as Slack, and also a mobile app for ease of visibility.

Online free training offered twice a month
Webinar: https://www.pagerduty.com/resources/webinar-series/pagerduty-101/
Blog:https://www.pagerduty.com/blog/

How to integrate PagerDuty to AWS CloudTrial  ?
https://support.pagerduty.com/docs/aws-cloudtrail-integration-guide

https://support.pagerduty.com/docs/aws-personal-health-dashboard

Integration between PagerDuty and Newrelic ?
https://www.pagerduty.com/docs/guides/new-relic-integration-guide/

Integration PagerDuty and DataDog ?
https://www.pagerduty.com/docs/guides/datadog-integration-guide/

Integratoin PagerDuty and Ansible?
https://www.pagerduty.com/docs/guides/ansible-integration-guide/

Integration Pagerduty and AppDynamics ?
https://www.pagerduty.com/docs/guides/appdynamics-integration-guide/

Integration PagerDuty and Okta ?
https://www.pagerduty.com/docs/guides/okta-sso-setup/

Integration PagerDuty and Splunk ?
https://www.pagerduty.com/docs/guides/splunk-integration-guide/

Integration PagerDuty and Slack ?
https://www.pagerduty.com/docs/guides/slack-integration-guide/
------------------------ DataDog Monitor ------------------------
About more ?
https://docs.datadoghq.com/

what is datadog?
Datadog is a monitoring service for cloud-scale applications, providing monitoring of servers, databases, tools, and services, through a SaaS-based data analytics platform.

What is agent ? installation agent ?
https://docs.datadoghq.com/agent/?tab=agentv6
The Datadog Agent is software that runs on your hosts. It collects events and metrics from hosts and sends them to Datadog, where you can analyze your monitoring and performance data. The Datadog Agent is open-source, and its source code is available on GitHub at DataDog/datadog-agent.
Github Agent link:
https://github.com/DataDog/datadog-agent

integrations ?
More 200+ services works : ex:Most of all cloud services (aws,azure,Google cloud )
https://docs.datadoghq.com/integrations/

Alerting configuration ?
https://docs.datadoghq.com/monitors/monitor_types/

Pricing ?
https://www.datadoghq.com/pricing/

======================================================================================================
                             Scripting : Shell,YAML,JSON,Python
======================================================================================================
1)Shell script :
https://www.shellscript.sh/index.html
https://www.learnshell.org/
http://stackoverflow.com/questions/12741710/what-does-mean-in-a-shell-script
https://www.guru99.com/introduction-to-shell-scripting.html
Well :
https://www.tutorialspoint.com/unix/shell_scripting.htm
Well for UNIX/Linux :
https://www.tutorialspoint.com/unix/
Well For Linux admin :
https://www.tutorialspoint.com/linux_admin/linux_admin_shell_scripting.htm

-----------------2)PYTHON:----------------

First : install below softwares
Atom:
SublimeText:
Jupyter:
Anakonda:On windows
https://www.anaconda.com/download/#windows
https://jupyter.org/install
We strongly recommend installing Python and Jupyter using the Anaconda Distribution, which includes Python, the Jupyter Notebook, and other commonly used packages for scientific computing and data science.
1-First, download Anaconda. We recommend downloading Anaconda’s latest Python 3 version.
https://docs.anaconda.com/anaconda/install/mac-os/
2-
To run Jupyter in backgroud:
HOSTNAME:tmp ks$ nohup /anaconda3/bin/jupyter_mac.command &
or
# nohup jupyter notebook &

Installation python :
Three ways :
1-)IDE or Python terminal :
https://www.python.org/downloads/
https://www.python.org/downloads/release/python-372/
2)Using CLI

3)Using Anankond

https://wiki.python.org/moin/BeginnersGuide/Programmers

-------- Basics Learn Python -----------------
https://www.learnpython.org/
https://www.geeksforgeeks.org/python-programming-language/
https://www.w3schools.com/python/default.asp
Python flow Diagram :About mutable and immutable
https://medium.com/@meghamohan/mutable-and-immutable-side-of-python-c2145cf72747
https://www.geeksforgeeks.org/mutable-vs-immutable-objects-in-python/

List,Disctionary and Tuples:
http://sthurlow.com/python/lesson06/
http://thaangaraj.blogspot.in/2013/03/what-difference-between-list-tuples-and_16.html

installation python2 and python3:
https://www.digitalocean.com/community/tutorials/how-to-set-up-python-2-7-6-and-3-3-3-on-centos-6-4

How to do migrate from python2 to python3 version on Linux centos7 ?
Pythong versions download package:
https://www.python.org/ftp/python/
Migration procedure:
https://danieleriksson.net/2017/02/08/how-to-install-latest-python-on-centos/

Tourbleshooting issue between pythong2 and python3 :
Note: if python2 version is mapped then only you can run any package through "yum" or else if its mapping to "python3" then "yum" never works on "python3 version"
https://stackoverflow.com/questions/11213520/yum-crashed-with-keyboard-interrupt-error

------------------- End Python -----------------
3)JSON :
https://www.javatpoint.com/json-example

4)YAML :
https://learn.getgrav.org/advanced/yaml
https://www.tutorialspoint.com/grav/grav_forms.htm


=============== Jmeter =========
https://www.linuxhelp.com/how-to-install-apache-jmeter-in-centos-7
package download jmeter :
http://www.gtlib.gatech.edu/pub/apache//jmeter/binaries/apache-jmeter-5.1.tgz

To know the jmeter version:
[root@ip-10-152-15-37 bin]# pwd
/home/centos/apache-jmeter-5.1/bin
[root@ip-10-152-15-37 bin]# ./jmeter --version
    _    ____   _    ____ _   _ _____       _ __  __ _____ _____ _____ ____
   / \  |  _ \ / \  / ___| | | | ____|     | |  \/  | ____|_   _| ____|  _ \
  / _ \ | |_) / _ \| |   | |_| |  _|    _  | | |\/| |  _|   | | |  _| | |_) |
 / ___ \|  __/ ___ \ |___|  _  | |___  | |_| | |  | | |___  | | | |___|  _ <
/_/   \_\_| /_/   \_\____|_| |_|_____|  \___/|_|  |_|_____| |_| |_____|_| \_\ 5.1 r1853635

Copyright (c) 1999-2019 The Apache Software Foundation


=========== How to configure Bind server ? ========
How to properly configure BIND forward zone for an internal DNS server?
https://serverfault.com/questions/409190/how-to-properly-configure-bind-forward-zone-for-an-internal-dns-server

How to manage DNS forwarding ?
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/linux_domain_identity_authentication_and_policy_guide/managing-dns-forwarding

How to register DNS records into Bind servers ?
https://www.serverlab.ca/tutorials/linux/network-services/registering-dns-records-into-a-bind-domain/

========================= Interview questions and answers ==========================
https://www.edureka.co/blog/interview-questions/top-devops-interview-questions-2016/
=============== Find command ===========
Find command examples :
Argument list too long error for rm, cp, mv commands
https://stackoverflow.com/questions/11289551/argument-list-too-long-error-for-rm-cp-mv-commands/46601775#46601775
